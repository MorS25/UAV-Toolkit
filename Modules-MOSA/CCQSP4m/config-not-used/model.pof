node [ id = 0, death = false, type = factory, ref = 'Approach', name = 'Run' ]{
	services{
		1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39
	}
}
node [ id = 1, death = false, type = run, ref = 'MetaHeuristic', name = 'Simulated Annealing' ]{
	dads{
		0
	}
	services{
		40
	}
	factorys{
		[1|null|Problem]{63}
		[1|null|Stop]{116}
		[1|null|Temperature Functions]{123}
	}
	needs{
		[1|oInitialization]{197,239,241,255,263,287,311,334,361,372,388,397,419,441,445,448,485,490,493,498}
		[+|oLocalMove]{200,236,237,238,244,264,265,266,267,268,269,300,301,302,303,304,305,306,324,325,326,327,328,329,330,340,341,342,343,358,359,360,374,389,390,391,392,393,394,395,401,403,405,407,409,411,413,415,423,425,427,429,431,433,435,437,442,443,488,496}
	}
}
node [ id = 2, death = false, type = run, ref = 'MetaHeuristic', name = 'GA' ]{
	dads{
		0
	}
	services{
		41,42,43
	}
	factorys{
		[1|null|Problem]{63}
		[1|null|Stop]{116}
	}
	parameters{
		Int [name = 'population size', init = 100, min = 10, max = 10000, description = 'null']
		Int [name = 'tournament size', init = 3, min = 2, max = 16, description = 'null']
		Dbl [name = 'mutation rate', init = 0.100000, min = 0.00000, max = 1.00000, description = 'null']
	}
}
node [ id = 3, death = false, type = run, ref = 'MetaHeuristic', name = 'NSGA-II' ]{
	dads{
		0
	}
	services{
		44
	}
	factorys{
		[1|MultiProblem|Problem]{126}
		[1|null|Stop]{116}
	}
	needs{
		[1|oInitialization]{197,239,241,255,263,287,311,334,361,372,388,397,419,441,445,448,485,490,493,498}
		[+|oCrossover]{199,223,224,225,226,227,228,229,230,231,232,242,257,276,277,278,279,280,281,288,289,290,291,292,312,313,314,315,316,335,336,337,345,346,347,348,349,350,351,352,353,354,375,377,378,379,380,398,399,420,421,447,487,495,499}
		[+|oMutation]{198,233,234,235,243,259,270,271,272,273,274,275,293,294,295,296,297,298,299,317,318,319,320,321,322,323,338,339,355,356,357,373,381,382,383,384,385,386,387,400,402,404,406,408,410,412,414,422,424,426,428,430,432,434,436,446,486,494,500,501,502,503}
	}
	parameters{
		Int [name = 'population size', init = 100, min = 10, max = 10000, description = 'null']
		Int [name = 'tournament size', init = 3, min = 2, max = 16, description = 'null']
		Dbl [name = 'mutation rate', init = 0.100000, min = 0.00000, max = 1.00000, description = 'null']
	}
}
node [ id = 4, death = false, type = run, ref = 'Run', name = 'Branch & Bound' ]{
	dads{
		0
	}
	factorys{
		[1|null|fOptimalProblem]{127}
	}
	parameters{
		Int [name = 'Width-Lim', init = 1000, min = 10, max = 1000000000, description = 'null']
		Dbl [name = 'Greedy-Factor', init = 2.00000, min = 1.00000, max = 10000.0, description = 'null']
		Dbl [name = 'Death-Factor', init = 0.500000, min = 0.00000, max = 1.00000, description = 'null']
	}
}
node [ id = 5, death = false, type = run, ref = 'Exact', name = 'Cplex Model' ]{
	dads{
		0
	}
	factorys{
		[1|null|Models]{131}
	}
}
node [ id = 6, death = false, type = run, ref = 'MetaHeuristic', name = 'Random Algorithm' ]{
	dads{
		0
	}
	services{
		41
	}
	factorys{
		[1|null|Problem]{63}
		[1|null|Stop]{116}
	}
}
node [ id = 7, death = false, type = run, ref = 'MetaHeuristic', name = 'Descend' ]{
	dads{
		0
	}
	services{
		40
	}
	factorys{
		[1|null|Problem]{63}
		[1|null|Stop]{116}
	}
	needs{
		[1|oInitialization]{197,239,241,255,263,287,311,334,361,372,388,397,419,441,445,448,485,490,493,498}
		[1|oLocalMove]{200,236,237,238,244,264,265,266,267,268,269,300,301,302,303,304,305,306,324,325,326,327,328,329,330,340,341,342,343,358,359,360,374,389,390,391,392,393,394,395,401,403,405,407,409,411,413,415,423,425,427,429,431,433,435,437,442,443,488,496}
	}
	parameters{
		Int [name = 'Max Attempts', init = 100, min = -2147483648, max = 2147483647, description = 'null']
	}
}
node [ id = 8, death = false, type = run, ref = 'MetaHeuristic', name = 'MPGA' ]{
	dads{
		0
	}
	factorys{
		[1|null|Stop]{116}
		[1|null|Population]{149}
		[1|null|Local Improvement]{152}
		[1|null|Problem]{63}
	}
	parameters{
		Int [name = 'number of populations', init = 3, min = 1, max = 100, description = 'null']
		Int [name = 'number of individuals', init = 20, min = 2, max = 10000, description = 'null']
	}
}
node [ id = 9, death = false, type = run, ref = 'MetaHeuristic', name = 'Local Search' ]{
	dads{
		0
	}
	services{
		40,41
	}
	factorys{
		[1|null|Stop]{116}
		[1|null|Local Improvement]{152}
		[1|null|Problem]{63}
	}
}
node [ id = 10, death = false, type = run, ref = 'MetaHeuristic', name = 'Mult Start' ]{
	dads{
		0
	}
	services{
		40,41
	}
	factorys{
		[1|null|Stop]{116}
		[1|null|Local Improvement]{152}
		[1|null|Problem]{63}
	}
}
node [ id = 11, death = false, type = run, ref = 'MetaHeuristic', name = 'GRASP' ]{
	dads{
		0
	}
	services{
		40,45
	}
	factorys{
		[1|null|Stop]{116}
		[1|null|Local Improvement]{152}
		[1|null|Problem]{63}
	}
	parameters{
		Dbl [name = 'alpha', init = 0.100000, min = 0.00000, max = 1.00000, description = 'GRASP: alpha = 0.0 -> random | aplha = 1.0 -> greedy ']
	}
}
node [ id = 12, death = false, type = run, ref = 'MetaHeuristic', name = 'Ant Colony Optimization' ]{
	dads{
		0
	}
	services{
		40
	}
	factorys{
		[1|null|Stop]{116}
		[1|null|Problem]{63}
	}
	needs{
		[+|oTrailPheromone]{202,203,204}
	}
	parameters{
		Int [name = 'N-ants', init = 100, min = 1, max = 1000000, description = 'null']
		Dbl [name = 'convergence', init = 0.500000, min = 0.00100000, max = 1.00000, description = 'null']
	}
}
node [ id = 13, death = false, type = run, ref = 'MetaHeuristic', name = 'CLONal selection ALGorithm' ]{
	dads{
		0
	}
	services{
		40,41,46
	}
	factorys{
		[1|null|Stop]{116}
		[1|null|Artificial Immune System]{159}
		[1|null|Local Improvement]{152}
		[1|null|Problem]{63}
	}
	parameters{
		Itens [name = 'Keep', init = 1, itens = [none;best;all], description = 'null']
	}
}
node [ id = 14, death = false, type = run, ref = 'Run', name = 'GCILT Fix&Opt' ]{
	dads{
		0
	}
	services{
		47
	}
	parameters{
		Dbl [name = 'Time', init = 3600.00, min = 1.00000, max = 180000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.0500000, min = 0.00000, max = 100.000, description = 'null']
		Dbl [name = 'alpha', init = 0.100000, min = 0.00000, max = 1.00000, description = 'null']
		Dbl [name = 'ganho', init = 0.0500000, min = 0.00000, max = 1.00000, description = 'null']
		Dbl [name = 'overlap', init = 0.200000, min = 0.00000, max = 1.00000, description = 'null']
		Int [name = 'size', init = 4, min = 2, max = 150, description = 'null']
		Int [name = 'Threads', init = 1, min = 0, max = 16, description = 'null']
	}
}
node [ id = 15, death = false, type = run, ref = 'Run', name = 'GCILT Fix&Opt v1' ]{
	dads{
		0
	}
	services{
		48
	}
	parameters{
		Dbl [name = 'Time', init = 60.0000, min = 1.00000, max = 180000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 0.00000, max = 100.000, description = 'null']
		Dbl [name = 'alpha', init = 0.100000, min = 0.00000, max = 1.00000, description = 'null']
		Int [name = 'Threads', init = 0, min = 0, max = 16, description = 'null']
	}
}
node [ id = 16, death = false, type = run, ref = 'Run', name = 'PPDCP-Full-O' ]{
	dads{
		0
	}
	services{
		49
	}
	parameters{
		Dbl [name = 'Time', init = 3600.00, min = 1.00000, max = 180000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 0.00000, max = 100.000, description = 'null']
		Int [name = 'Threads', init = 1, min = 0, max = 16, description = 'null']
	}
}
node [ id = 17, death = false, type = run, ref = 'Run', name = 'Tabler' ]{
	dads{
		0
	}
	parameters{
		FileRgx[name = 'Jobs', description = 'null', regex = '.*', constrants = null]
	}
}
node [ id = 18, death = false, type = run, ref = 'Run', name = 'PPDCP-Full-T' ]{
	dads{
		0
	}
	services{
		50
	}
	parameters{
		Dbl [name = 'Time', init = 3600.00, min = 1.00000, max = 180000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 0.00000, max = 100.000, description = 'null']
		Int [name = 'Threads', init = 1, min = 0, max = 16, description = 'null']
	}
}
node [ id = 19, death = false, type = run, ref = 'Run', name = 'PPDCP-Full-A' ]{
	dads{
		0
	}
	services{
		51
	}
	parameters{
		Dbl [name = 'Time', init = 3600.00, min = 1.00000, max = 180000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 0.00000, max = 100.000, description = 'null']
		Int [name = 'Threads', init = 1, min = 0, max = 16, description = 'null']
	}
}
node [ id = 20, death = true, type = run, ref = 'Run', name = 'Branch & Bound Exact' ]{
	dads{
		0
	}
	factorys{
		[1|null|fBranchProblem]{164}
		[1|null|Stop]{116}
	}
	needs{
		[1|oExpand]{death}
		[1|oLowerBound]{death}
	}
	parameters{
		Dbl [name = 'Mem-Lim (MB)', init = 5.00000, min = 1.00000, max = 2048.00, description = 'null']
	}
}
node [ id = 21, death = true, type = run, ref = 'Run', name = 'Greedy Exact' ]{
	dads{
		0
	}
	factorys{
		[1|null|fBranchProblem]{164}
		[1|null|Stop]{116}
	}
	needs{
		[1|oExpand]{death}
	}
}
node [ id = 22, death = false, type = run, ref = 'Run', name = 'PPDCP-PD-01' ]{
	dads{
		0
	}
	services{
		52
	}
}
node [ id = 23, death = false, type = run, ref = 'Run', name = 'DPOC' ]{
	dads{
		0
	}
	factorys{
		[1|null|fDynamic]{169}
	}
}
node [ id = 24, death = false, type = run, ref = 'Abstraction', name = 'C&A Incremental_v1' ]{
	dads{
		0
	}
	services{
		53
	}
	parameters{
		Dbl [name = 'Time', init = 3600.00, min = 1.00000, max = 180000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 0.00000, max = 100.000, description = 'null']
		Int [name = 'Threads', init = 1, min = 0, max = 16, description = 'null']
	}
}
node [ id = 25, death = false, type = run, ref = 'Abstraction', name = 'C&A Incremental_v2' ]{
	dads{
		0
	}
	services{
		54
	}
	parameters{
		Dbl [name = 'Time', init = 3600.00, min = 1.00000, max = 180000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 0.00000, max = 100.000, description = 'null']
		Int [name = 'Threads', init = 1, min = 0, max = 16, description = 'null']
	}
}
node [ id = 26, death = false, type = run, ref = 'Abstraction', name = 'C&A Incremental_v3' ]{
	dads{
		0
	}
	services{
		55
	}
	parameters{
		Dbl [name = 'Time', init = 3600.00, min = 1.00000, max = 180000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 0.00000, max = 100.000, description = 'null']
		Int [name = 'Threads', init = 1, min = 0, max = 16, description = 'null']
	}
}
node [ id = 27, death = false, type = run, ref = 'Run', name = 'Sgl to Txt' ]{
	dads{
		0
	}
	parameters{
		FileRgx[name = 'Map for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
	}
}
node [ id = 28, death = false, type = run, ref = 'Heuristic', name = 'RFFO' ]{
	dads{
		0
	}
	services{
		56
	}
	factorys{
		[1|null|fRFFOModel]{171}
	}
	parameters{
		Int [name = 'rf-Size', init = 40, min = 1, max = 2147483647, description = 'null']
		Dbl [name = 'rf-Overlap', init = 0.800000, min = 0.00000, max = 1.00000, description = 'null']
		Int [name = 'fo-Size', init = 40, min = 1, max = 2147483647, description = 'null']
		Dbl [name = 'fo-Overlap', init = 0.500000, min = 0.00000, max = 1.00000, description = 'null']
		Dbl [name = 'fo-Tol', init = 0.0100000, min = 0.00000, max = 1.00000, description = 'null']
		Int [name = 'fo-Inc', init = 10, min = 0, max = 2147483647, description = 'null']
	}
}
node [ id = 29, death = false, type = run, ref = 'Heuristic', name = 'AUV.CSA' ]{
	dads{
		0
	}
	factorys{
		[1|null|UAV-Approach]{183}
	}
	needs{
		[1|oCSA]{537,538,539,540}
	}
	parameters{
		Dbl [name = 'Time', init = 3600.00, min = 1.00000, max = 180000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 0.00000, max = 100.000, description = 'null']
		Int [name = 'Threads', init = 1, min = 0, max = 16, description = 'null']
		Int [name = 'warning', init = 0, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
	}
}
node [ id = 30, death = false, type = run, ref = 'Heuristic', name = 'UAV re-build' ]{
	dads{
		0
	}
	factorys{
		[1|null|UAV-Approach]{183}
	}
	needs{
		[1|oRebuild]{541}
	}
	parameters{
		Dbl [name = 'Time', init = 3600.00, min = 1.00000, max = 180000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 0.00000, max = 100.000, description = 'null']
		Int [name = 'Threads', init = 1, min = 0, max = 16, description = 'null']
		Int [name = 'nIterations', init = 40, min = 1, max = 100, description = 'null']
		Int [name = 'warning', init = 0, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
	}
}
node [ id = 31, death = false, type = run, ref = 'Exact', name = 'pSulu Planner' ]{
	dads{
		0
	}
	services{
		57,58
	}
	parameters{
		Dbl [name = 'Time', init = 3600.00, min = 1.00000, max = 180000, description = 'null']
		Dbl [name = 'dt', init = 10.0000, min = 0.00100000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'max-control', init = 1.00000, min = 0.00100000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'max-velocity', init = 3.00000, min = 0.00100000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'std-position', init = 0.0500000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'std-velocity', init = 0.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 32, death = false, type = run, ref = 'MetaHeuristic', name = 'SA' ]{
	dads{
		0
	}
	services{
		40,41,46
	}
	factorys{
		[1|null|Problem]{63}
		[1|null|Stop]{116}
		[1|null|Temperature Functions]{189}
	}
}
node [ id = 33, death = false, type = run, ref = 'Abstraction', name = 'Customized Approach' ]{
	dads{
		0
	}
	services{
		59
	}
	parameters{
		Dbl [name = 'Time', init = 3600.00, min = 1.00000, max = 180000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 0.00000, max = 100.000, description = 'null']
		Int [name = 'Threads', init = 1, min = 0, max = 16, description = 'null']
	}
}
node [ id = 34, death = false, type = run, ref = 'Abstraction', name = 'PPDCP - Model Full' ]{
	dads{
		0
	}
	services{
		60
	}
	parameters{
		Dbl [name = 'Time', init = 3600.00, min = 1.00000, max = 180000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 0.00000, max = 100.000, description = 'null']
		Int [name = 'Threads', init = 1, min = 0, max = 16, description = 'null']
	}
}
node [ id = 35, death = false, type = run, ref = 'Run', name = 'p-Sulu Planner' ]{
	dads{
		0
	}
}
node [ id = 36, death = false, type = run, ref = 'Run', name = 'GCILT Full Model' ]{
	dads{
		0
	}
	services{
		61
	}
	parameters{
		Dbl [name = 'Time', init = 3600.00, min = 1.00000, max = 180000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 0.00000, max = 100.000, description = 'null']
		Int [name = 'Threads', init = 1, min = 0, max = 16, description = 'null']
	}
}
node [ id = 37, death = false, type = run, ref = 'Run', name = 'OUT' ]{
	dads{
		0
	}
	parameters{
		FileRgx[name = 'Files for OUT', description = 'null', regex = '(.*\.out)', constrants = null]
	}
}
node [ id = 38, death = false, type = run, ref = 'MetaHeuristic', name = 'Combinatorial Algorithm' ]{
	dads{
		0
	}
	services{
		40
	}
	factorys{
		[1|CombProblem|Problem]{192}
		[1|null|Stop]{116}
	}
	needs{
		[1|oCombAddConstraints]{491}
	}
}
node [ id = 39, death = false, type = run, ref = 'Heuristic', name = 'PS(Polynomial Search)' ]{
	dads{
		0
	}
	services{
		62
	}
	factorys{
		[1|null|fPSModel]{193}
	}
	parameters{
		Int [name = 'PS-init', init = 1, min = 0, max = 1, description = 'null']
		Itens [name = 'PS-expression', init = 1, itens = [<=;==], description = 'null']
		Dbl [name = 'PS-cplex(s)', init = 10.0000, min = 0.00000, max = 3600.00, description = 'null']
		Int [name = 'PS-charge', init = 4, min = 1, max = 2147483647, description = 'null']
		Int [name = 'PS-walk', init = 120, min = 1, max = 2147483647, description = 'null']
		Int [name = 'PS-greedy', init = 0, min = 0, max = 2147483647, description = 'null']
	}
}
node [ id = 40, death = false, type = single, ref = 'ApproachSingle', name = 'CountIterations' ]{
	dads{
		1,7,9,10,11,12,13,32,38
	}
}
node [ id = 41, death = false, type = serv, ref = 'Approach', name = 'Initialize' ]{
	dads{
		2,6,9,10,13,32,150,151
	}
	needs{
		[1|Problem]{64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91}
		[+|oInitialization]{197,239,241,255,263,287,311,334,361,372,388,397,419,441,445,448,485,490,493,498}
	}
}
node [ id = 42, death = false, type = serv, ref = 'Approach', name = 'Crossover' ]{
	dads{
		2,150,151
	}
	needs{
		[1|Problem]{64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91}
		[+|oCrossover]{199,223,224,225,226,227,228,229,230,231,232,242,257,276,277,278,279,280,281,288,289,290,291,292,312,313,314,315,316,335,336,337,345,346,347,348,349,350,351,352,353,354,375,377,378,379,380,398,399,420,421,447,487,495,499}
	}
}
node [ id = 43, death = false, type = serv, ref = 'Approach', name = 'Mutation' ]{
	dads{
		2,150,151
	}
	needs{
		[1|Problem]{64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91}
		[+|oMutation]{198,233,234,235,243,259,270,271,272,273,274,275,293,294,295,296,297,298,299,317,318,319,320,321,322,323,338,339,355,356,357,373,381,382,383,384,385,386,387,400,402,404,406,408,410,412,414,422,424,426,428,430,432,434,436,446,486,494,500,501,502,503}
	}
}
node [ id = 44, death = false, type = single, ref = 'ApproachSingle', name = 'CallBack CSV' ]{
	dads{
		3
	}
}
node [ id = 45, death = false, type = serv, ref = 'Approach', name = 'GreedyConstruction' ]{
	dads{
		11
	}
	needs{
		[1|Problem]{64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91}
		[+|oGreedyConstruction]{201}
	}
}
node [ id = 46, death = false, type = serv, ref = 'Approach', name = 'LocalMove' ]{
	dads{
		13,32,154,155,156,157,158
	}
	needs{
		[1|Problem]{64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91}
		[+|oLocalMove]{200,236,237,238,244,264,265,266,267,268,269,300,301,302,303,304,305,306,324,325,326,327,328,329,330,340,341,342,343,358,359,360,374,389,390,391,392,393,394,395,401,403,405,407,409,411,413,415,423,425,427,429,431,433,435,437,442,443,488,496}
	}
}
node [ id = 47, death = false, type = serv, ref = 'Instance', name = 'GCILT-Instance' ]{
	dads{
		14
	}
	parameters{
		FileRgx[name = 'Instances for GCILT', description = 'null', regex = '(.*\.dat)', constrants = null]
	}
}
node [ id = 48, death = false, type = serv, ref = 'Instance', name = 'GCILT-Instance' ]{
	dads{
		15
	}
	parameters{
		FileRgx[name = 'Instances for GCILT', description = 'null', regex = '(.*\.dat)', constrants = null]
	}
}
node [ id = 49, death = false, type = serv, ref = 'Instance', name = 'Instance-TSP' ]{
	dads{
		16
	}
	parameters{
		FileRgx[name = 'Instances for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		Dbl [name = 'Delta', init = 0.00100000, min = 0.00000, max = 0.500000, description = 'null']
		Int [name = 'K', init = 20, min = 1, max = 10000, description = 'null']
		Dbl [name = 'PD', init = 100.000, min = 0.00000, max = 1.00000e+20, description = 'null']
		Dbl [name = 'PB', init = 10.0000, min = 0.00000, max = 1.00000e+20, description = 'null']
	}
}
node [ id = 50, death = false, type = serv, ref = 'Instance', name = 'Instance-TSP' ]{
	dads{
		18
	}
	parameters{
		FileRgx[name = 'Instances for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		Dbl [name = 'Delta', init = 0.00100000, min = 0.00000, max = 0.500000, description = 'null']
		Int [name = 'K', init = 20, min = 1, max = 10000, description = 'null']
		Dbl [name = 'PD', init = 100.000, min = 0.00000, max = 1.00000e+20, description = 'null']
		Dbl [name = 'PB', init = 10.0000, min = 0.00000, max = 1.00000e+20, description = 'null']
	}
}
node [ id = 51, death = false, type = serv, ref = 'Instance', name = 'Instance-TSP' ]{
	dads{
		19
	}
	parameters{
		FileRgx[name = 'Instances for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		Dbl [name = 'Delta', init = 0.00100000, min = 0.00000, max = 0.500000, description = 'null']
		Int [name = 'K', init = 20, min = 1, max = 10000, description = 'null']
		Dbl [name = 'PD', init = 100.000, min = 0.00000, max = 1.00000e+20, description = 'null']
		Dbl [name = 'PB', init = 10.0000, min = 0.00000, max = 1.00000e+20, description = 'null']
	}
}
node [ id = 52, death = false, type = serv, ref = 'Instance', name = 'Instance-PPDCP' ]{
	dads{
		22
	}
	parameters{
		FileRgx[name = 'Map for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		FileRgx[name = 'Dinamic for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		Itens [name = 'Objectives', init = 3, itens = [SQRNorm2CPX;Norm1;Norm2Aprox32;SQRNorm2Aprox32], description = 'null']
		Itens [name = 'Extra Restrictions', init = 1, itens = [Empty;New], description = 'null']
	}
}
node [ id = 53, death = false, type = serv, ref = 'Instance', name = 'Instance-PPDCP' ]{
	dads{
		24
	}
	parameters{
		FileRgx[name = 'Map for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		FileRgx[name = 'Dinamic for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		Itens [name = 'Objectives', init = 3, itens = [SQRNorm2CPX;Norm1;Norm2Aprox32;SQRNorm2Aprox32], description = 'null']
		Itens [name = 'Extra Restrictions', init = 1, itens = [Empty;New], description = 'null']
	}
}
node [ id = 54, death = false, type = serv, ref = 'Instance', name = 'Instance-PPDCP' ]{
	dads{
		25
	}
	parameters{
		FileRgx[name = 'Map for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		FileRgx[name = 'Dinamic for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		Itens [name = 'Objectives', init = 3, itens = [SQRNorm2CPX;Norm1;Norm2Aprox32;SQRNorm2Aprox32], description = 'null']
		Itens [name = 'Extra Restrictions', init = 1, itens = [Empty;New], description = 'null']
	}
}
node [ id = 55, death = false, type = serv, ref = 'Instance', name = 'Instance-PPDCP' ]{
	dads{
		26
	}
	parameters{
		FileRgx[name = 'Map for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		FileRgx[name = 'Dinamic for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		Itens [name = 'Objectives', init = 3, itens = [SQRNorm2CPX;Norm1;Norm2Aprox32;SQRNorm2Aprox32], description = 'null']
		Itens [name = 'Extra Restrictions', init = 1, itens = [Empty;New], description = 'null']
	}
}
node [ id = 56, death = false, type = serv, ref = 'Stop', name = 'Time' ]{
	dads{
		28
	}
	parameters{
		Dbl [name = 'time', init = 60.0000, min = 0.00100000, max = 1.00000e+07, description = 'the time of execution (seconds)']
	}
}
node [ id = 57, death = false, type = serv, ref = 'OnoInstance', name = 'Instance 2D' ]{
	dads{
		31
	}
	parameters{
		FileRgx[name = 'CCQSP 2D', description = 'null', regex = '(.*\.sgl)', constrants = null]
	}
}
node [ id = 58, death = false, type = serv, ref = 'Plot', name = 'Ono Plot' ]{
	dads{
		31
	}
	parameters{
		Int [name = 'Enable plot', init = 1, min = 0, max = 1, description = 'null']
		Int [name = 'Save png', init = 1, min = 0, max = 1, description = 'null']
		Int [name = 'Save gif', init = 1, min = 0, max = 1, description = 'null']
		Dbl [name = 'resolution', init = 2.50000, min = 0.100000, max = 10.0000, description = 'factor of resolution to save the '.png' results']
	}
}
node [ id = 59, death = false, type = serv, ref = 'Instance', name = 'Instance-PPDCP' ]{
	dads{
		33
	}
	parameters{
		FileRgx[name = 'Map for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		FileRgx[name = 'Dinamic for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		Itens [name = 'Objectives', init = 3, itens = [SQRNorm2CPX;Norm1;Norm2Aprox32;SQRNorm2Aprox32], description = 'null']
		Itens [name = 'Extra Restrictions', init = 1, itens = [Empty;New], description = 'null']
	}
}
node [ id = 60, death = false, type = serv, ref = 'Instance', name = 'Instance-PPDCP' ]{
	dads{
		34
	}
	parameters{
		FileRgx[name = 'Map for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		FileRgx[name = 'Dinamic for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		Itens [name = 'Objectives', init = 3, itens = [SQRNorm2CPX;Norm1;Norm2Aprox32;SQRNorm2Aprox32], description = 'null']
		Itens [name = 'Extra Restrictions', init = 1, itens = [Empty;New], description = 'null']
	}
}
node [ id = 61, death = false, type = serv, ref = 'Instance', name = 'GCILT-Instance' ]{
	dads{
		36
	}
	parameters{
		FileRgx[name = 'Instances for GCILT', description = 'null', regex = '(.*\.dat)', constrants = null]
	}
}
node [ id = 62, death = false, type = serv, ref = 'Stop', name = 'Time' ]{
	dads{
		39
	}
	parameters{
		Dbl [name = 'time', init = 60.0000, min = 0.00100000, max = 1.00000e+07, description = 'the time of execution (seconds)']
	}
}
node [ id = 63, death = false, type = factory, ref = 'Approach', name = 'Problem' ]{
	services{
		64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91
	}
}
node [ id = 64, death = false, type = serv, ref = 'Problem', name = 'TSP' ]{
	dads{
		63
	}
	services{
		92,93
	}
	factorys{
		[.|null|TSP Operators]{196}
	}
}
node [ id = 65, death = false, type = serv, ref = 'SingleFunction', name = 'Single - Real' ]{
	dads{
		63
	}
	services{
		92
	}
	factorys{
		[1|null|fRealSingle]{205}
		[.|null|Codif-Real Operators]{222}
	}
}
node [ id = 66, death = false, type = serv, ref = 'SingleFunction', name = 'Single - BinReal' ]{
	dads{
		63
	}
	services{
		92
	}
	factorys{
		[1|null|fRealSingle]{205}
		[.|null|Codif-Real Operators]{240}
	}
	parameters{
		Int [name = 'length', init = 16, min = 2, max = 1048576, description = 'null']
	}
}
node [ id = 67, death = false, type = serv, ref = 'MultiFunction', name = 'Multi - Real' ]{
	dads{
		63,126
	}
	factorys{
		[1|null|fRealMulti]{245}
		[.|null|Codif-Real Operators]{222}
	}
}
node [ id = 68, death = false, type = serv, ref = 'MultiFunction', name = 'Multi - BinReal' ]{
	dads{
		63,126
	}
	factorys{
		[1|null|fRealMulti]{245}
		[.|null|Codif-Real Operators]{240}
	}
}
node [ id = 69, death = false, type = serv, ref = 'Problem', name = 'ACK' ]{
	dads{
		63
	}
	services{
		92
	}
	factorys{
		[.|null|Codif-Real Operators]{222}
		[.|null|ACK Init]{254}
		[.|null|ACK Cross]{256}
		[.|null|ACK Mut]{258}
	}
}
node [ id = 70, death = false, type = serv, ref = 'Problem', name = 'GCI' ]{
	dads{
		63
	}
	services{
		92,94
	}
	factorys{
		[1|null|Solver]{260}
		[.|null|GCI Operators]{262}
	}
}
node [ id = 71, death = false, type = serv, ref = 'Problem', name = 'Fuction-v1' ]{
	dads{
		63
	}
	services{
		92
	}
	factorys{
		[.|null|Codif-Real Operators]{222}
	}
}
node [ id = 72, death = false, type = serv, ref = 'Problem', name = 'Fuction-v2' ]{
	dads{
		63
	}
	services{
		92,95
	}
	factorys{
		[.|null|Codif-Real Operators]{222}
	}
}
node [ id = 73, death = false, type = serv, ref = 'Problem', name = 'ACK-10' ]{
	dads{
		63
	}
	services{
		92
	}
	factorys{
		[.|null|Codif-Real Operators]{222}
	}
}
node [ id = 74, death = false, type = serv, ref = 'Problem', name = 'Function_v3' ]{
	dads{
		63
	}
	services{
		92
	}
	factorys{
		[.|null|Codif-Real Operators]{222}
	}
}
node [ id = 75, death = false, type = serv, ref = 'Problem', name = 'PID' ]{
	dads{
		63
	}
	services{
		92,96
	}
	factorys{
		[.|null|Codif-Real Operators]{222}
	}
}
node [ id = 76, death = false, type = serv, ref = 'Problem', name = 'PID-ITAE' ]{
	dads{
		63
	}
	services{
		92
	}
	factorys{
		[.|null|Codif-Real Operators]{222}
	}
}
node [ id = 77, death = false, type = serv, ref = 'Problem', name = 'GCI-W Long Term' ]{
	dads{
		63
	}
	services{
		92,97
	}
	factorys{
		[1|null|Model]{282}
		[.|null|GCILT Operators]{286}
	}
}
node [ id = 78, death = false, type = serv, ref = 'Problem', name = 'GCI-N Long Term' ]{
	dads{
		63
	}
	services{
		92,98
	}
	factorys{
		[1|null|Model]{307}
		[.|null|GCILT Operators]{310}
	}
}
node [ id = 79, death = false, type = serv, ref = 'Problem', name = 'GCI Long Term B' ]{
	dads{
		63
	}
	services{
		92,99
	}
	factorys{
		[1|null|Model]{331}
		[.|null|GCILTB Operators]{333}
	}
}
node [ id = 80, death = false, type = serv, ref = 'Problem', name = 'PPDCP' ]{
	dads{
		63
	}
	services{
		92,100
	}
	factorys{
		[.|null|Codif-Real Operators]{344}
	}
}
node [ id = 81, death = false, type = serv, ref = 'Problem', name = 'PSSLSAN-2' ]{
	dads{
		63
	}
	services{
		92,101,102,103
	}
	factorys{
		[1|null|Solver]{362}
		[1|null|fRATSP]{365}
		[1|null|Sequencia]{368}
		[.|null|PSSLSAN Operators-2]{371}
	}
}
node [ id = 82, death = false, type = serv, ref = 'Problem', name = 'PSSLSAN-1' ]{
	dads{
		63
	}
	services{
		92,101,104,105
	}
	factorys{
		[1|null|Solver]{362}
		[1|null|Sequencia]{368}
		[.|null|PSSLSAN Operators-1]{376}
	}
}
node [ id = 83, death = false, type = serv, ref = 'Problem', name = 'MD' ]{
	dads{
		63
	}
	services{
		92,106
	}
	factorys{
		[.|null|MD Operators]{396}
	}
}
node [ id = 84, death = false, type = serv, ref = 'Problem', name = 'MD-Cpx' ]{
	dads{
		63
	}
	services{
		92,107
	}
	factorys{
		[1|null|MD-Heuristic]{416}
		[.|null|MD-Cpx Operators]{418}
	}
}
node [ id = 85, death = false, type = serv, ref = 'Problem', name = 'MLCLSP-2' ]{
	dads{
		63
	}
	services{
		92,108
	}
	factorys{
		[.|null|MLCLSP Operators]{438}
	}
}
node [ id = 86, death = false, type = serv, ref = 'Problem', name = 'HTSP' ]{
	dads{
		63
	}
	services{
		92,109
	}
	factorys{
		[.|null|TSP Operators]{444}
	}
}
node [ id = 87, death = false, type = serv, ref = 'Problem', name = 'BlackmoreProblem' ]{
	dads{
		63
	}
	services{
		92,110,111
	}
	factorys{
		[1|null|Vehicle]{449}
		[1|null|fBlackmoreUncertainty]{452}
		[1|null|Instance Reader]{459}
		[1|null|Objective]{468}
		[1|null|Blackmore Avoidance]{473}
		[.|null|BlackmoreOperatorProblem]{484}
	}
	needs{
		[1|pLinearWaypoints]{594,595,596,597,598,599,600,601,602}
		[1|oLinearDynamic]{585,586,587,588,589,590,591,592,593}
	}
	parameters{
		Int [name = 'Avoid-N-risk', init = 12, min = 1, max = 16, description = 'Number of picewise restriction to aproximate the inverse of erf(x) to calculate the risk allocation for obstacle avoidance']
		Int [name = 'Steps', init = 10, min = 5, max = 1000, description = 'Number of steps to perform changes in obstacle edges']
		Int [name = 'Particle-Control', init = 10000, min = 100, max = 1000000000, description = 'null']
	}
}
node [ id = 88, death = false, type = serv, ref = 'CombProblem', name = 'Trap' ]{
	dads{
		63,192
	}
	services{
		92
	}
	factorys{
		[.|null|Codif-Comb Operators]{489}
	}
}
node [ id = 89, death = false, type = serv, ref = 'Problem', name = 'Sena' ]{
	dads{
		63
	}
	services{
		92,112
	}
	factorys{
		[.|null|TSP Operators]{492}
	}
}
node [ id = 90, death = false, type = serv, ref = 'RNAAbstract', name = 'RNA' ]{
	dads{
		63
	}
	services{
		92,113,113
	}
	factorys{
		[.|null|RNA Operators]{497}
		[.|null|RNA Operators]{497}
	}
}
node [ id = 91, death = false, type = serv, ref = 'RNAAbstract', name = 'RNA-Car' ]{
	dads{
		63
	}
	services{
		92,114,114
	}
	factorys{
		[.|null|RNA Operators]{497}
		[.|null|RNA Operators]{497}
	}
}
node [ id = 92, death = false, type = serv, ref = 'Best', name = 'BestSol' ]{
	dads{
		64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91
	}
	services{
		115
	}
	needs{
		[1|Stop]{56,62,117,118,119,120,121,122}
	}
	parameters{
		Dbl [name = 'refresh time', init = 0.100000, min = 0.00000, max = 60.0000, description = 'tempo dado entre atualizacoes dos prints']
	}
}
node [ id = 93, death = false, type = serv, ref = 'Instance', name = 'Instance-TSP' ]{
	dads{
		64
	}
	parameters{
		FileRgx[name = 'Instances for TSP', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 94, death = false, type = serv, ref = 'Instance', name = 'Instance-GCI' ]{
	dads{
		70
	}
	parameters{
		FileRgx[name = 'Instances for GCI', description = 'null', regex = '(.*\.dat)', constrants = null]
	}
}
node [ id = 95, death = false, type = param, ref = 'ApproachParameter', name = 'Function-v2-Param' ]{
	dads{
		72
	}
	parameters{
		Dbl [name = 'min(x)', init = -1.00000, min = -5.00000, max = 5.00000, description = 'null']
		Dbl [name = 'max(x)', init = 2.00000, min = -5.00000, max = 5.00000, description = 'null']
	}
}
node [ id = 96, death = false, type = serv, ref = 'Instance', name = 'PID-Instance' ]{
	dads{
		75
	}
	parameters{
		FileRgx[name = 'Instances for PID', description = 'null', regex = '(.*\.sgl)', constrants = null]
	}
}
node [ id = 97, death = false, type = serv, ref = 'Instance', name = 'GCILT-Instance' ]{
	dads{
		77
	}
	parameters{
		FileRgx[name = 'Instances for GCILT', description = 'null', regex = '(.*\.dat)', constrants = null]
	}
}
node [ id = 98, death = false, type = serv, ref = 'Instance', name = 'GCILT-Instance' ]{
	dads{
		78
	}
	parameters{
		FileRgx[name = 'Instances for GCILT', description = 'null', regex = '(.*\.dat)', constrants = null]
	}
}
node [ id = 99, death = false, type = serv, ref = 'Instance', name = 'GCILT-Instance' ]{
	dads{
		79
	}
	parameters{
		FileRgx[name = 'Instances for GCILTB', description = 'null', regex = '(.*\.dat)', constrants = null]
	}
}
node [ id = 100, death = false, type = serv, ref = 'Instance', name = 'Instance-PPDCP' ]{
	dads{
		80
	}
	parameters{
		FileRgx[name = 'Map for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		FileRgx[name = 'Dinamic for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		Itens [name = 'Objectives', init = 3, itens = [SQRNorm2CPX;Norm1;Norm2Aprox32;SQRNorm2Aprox32], description = 'null']
		Itens [name = 'Extra Restrictions', init = 1, itens = [Empty;New], description = 'null']
	}
}
node [ id = 101, death = false, type = serv, ref = 'Instance', name = 'Instance PSSLSAN' ]{
	dads{
		81,82
	}
	parameters{
		FileRgx[name = 'PSSLSAN instance', description = 'null', regex = '(.*\.inst)', constrants = null]
	}
}
node [ id = 102, death = false, type = serv, ref = 'aRASolver', name = 'Model' ]{
	dads{
		81
	}
	needs{
		[1|RAInstance]{101}
		[1|aRASequencia]{369,370}
	}
}
node [ id = 103, death = false, type = serv, ref = 'Approach', name = 'Method Result' ]{
	dads{
		81
	}
	needs{
		[1|RAInstance]{101}
	}
}
node [ id = 104, death = false, type = serv, ref = 'aRASolver', name = 'Model' ]{
	dads{
		82
	}
	needs{
		[1|RAInstance]{101}
		[1|aRASequencia]{369,370}
	}
}
node [ id = 105, death = false, type = serv, ref = 'Approach', name = 'Method Result' ]{
	dads{
		82
	}
	needs{
		[1|RAInstance]{101}
	}
}
node [ id = 106, death = false, type = serv, ref = 'Instance', name = 'Instance-MD' ]{
	dads{
		83
	}
	parameters{
		FileRgx[name = 'Instances for MD', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 107, death = false, type = serv, ref = 'Instance', name = 'Instance-MD' ]{
	dads{
		84
	}
	parameters{
		FileRgx[name = 'Instances for MD', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 108, death = false, type = serv, ref = 'Instance', name = 'Instance-MLCLSP' ]{
	dads{
		85
	}
	parameters{
		FileRgx[name = 'Instances for MLCLSP', description = 'null', regex = '(.*\.inst)', constrants = null]
	}
}
node [ id = 109, death = false, type = serv, ref = 'Instance', name = 'Instance-TSP' ]{
	dads{
		86
	}
	parameters{
		FileRgx[name = 'Instances for TSP', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 110, death = false, type = serv, ref = 'Provider', name = 'Linear Delta' ]{
	dads{
		87,181,184,185
	}
	parameters{
		Dbl [name = 'Delta', init = 0.00100000, min = 1.00000e-06, max = 0.500000, description = 'null']
	}
}
node [ id = 111, death = false, type = serv, ref = 'Plot', name = 'Blackmore Plot' ]{
	dads{
		87
	}
	parameters{
		Int [name = 'Enable plot', init = 1, min = 0, max = 1, description = 'null']
		Int [name = 'Save png', init = 1, min = 0, max = 1, description = 'null']
		Int [name = 'Save gif', init = 1, min = 0, max = 1, description = 'null']
		Dbl [name = 'resolution', init = 2.50000, min = 0.100000, max = 10.0000, description = 'factor of resolution to save the '.png' results']
	}
}
node [ id = 112, death = false, type = serv, ref = 'Instance', name = 'Instance-Sena' ]{
	dads{
		89
	}
	parameters{
		FileRgx[name = 'Instances for Sena', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 113, death = false, type = serv, ref = 'RNAInstanceAbstract', name = 'Instance-RNA' ]{
	dads{
		90,90
	}
	parameters{
		FileRgx[name = 'Instances for RNA', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 114, death = false, type = serv, ref = 'RNAInstanceAbstract', name = 'Instance-RNACar' ]{
	dads{
		91,91
	}
	parameters{
		FileRgx[name = 'Instances for RNACar', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 115, death = false, type = single, ref = 'ApproachSingle', name = 'Evaluations' ]{
	dads{
		92,166
	}
}
node [ id = 116, death = false, type = factory, ref = 'Approach', name = 'Stop' ]{
	services{
		117,118,119,120,121,122
	}
}
node [ id = 117, death = false, type = serv, ref = 'Stop', name = 'Evaluations' ]{
	dads{
		116
	}
	needs{
		[1|nEvaluations]{115}
	}
	parameters{
		Long [name = 'Evaluations', init = 1000, min = 1, max = 9223372036854775807, description = 'the maximum evaluations']
	}
}
node [ id = 118, death = false, type = serv, ref = 'Stop', name = 'Time' ]{
	dads{
		116
	}
	parameters{
		Dbl [name = 'time', init = 60.0000, min = 0.00100000, max = 1.00000e+07, description = 'the time of execution (seconds)']
	}
}
node [ id = 119, death = false, type = serv, ref = 'Stop', name = 'Stop for iterations' ]{
	dads{
		116
	}
	needs{
		[1|CountIteration]{40}
	}
	parameters{
		Long [name = 'Iterations', init = 1000, min = 1, max = 9223372036854775807, description = 'the maximum iterations']
	}
}
node [ id = 120, death = false, type = serv, ref = 'Stop', name = 'Time & Cut' ]{
	dads{
		116
	}
	needs{
		[1|Best]{92}
	}
	parameters{
		Dbl [name = 'max_time', init = 60.0000, min = 0.00100000, max = 1.00000e+07, description = 'the maximum time of executiom']
		Dbl [name = 'cut_time', init = 30.0000, min = 0.00100000, max = 1.00000e+07, description = 'cut the execution case not have improvement']
		Dbl [name = 'alpha', init = 1.00000, min = 1.00000e-06, max = 1.00000e+07, description = 'the alpha parameter']
	}
}
node [ id = 121, death = false, type = serv, ref = 'Stop', name = 'Forever' ]{
	dads{
		116
	}
}
node [ id = 122, death = false, type = serv, ref = 'Stop', name = 'Int Solutions' ]{
	dads{
		116
	}
	needs{
		[1|CountInteger]{168}
	}
	parameters{
		Long [name = 'Integer solutions', init = 1000, min = 1, max = 9223372036854775807, description = 'the maximum of integer solutions']
	}
}
node [ id = 123, death = false, type = factory, ref = 'Approach', name = 'Temperature Functions' ]{
	services{
		124,125
	}
}
node [ id = 124, death = false, type = serv, ref = 'Temperature', name = 'T = T * alpha' ]{
	dads{
		123
	}
	parameters{
		Dbl [name = 'T max', init = 1000.00, min = 1.00000e-06, max = 1.00000e+06, description = 'the maximum temperature']
		Dbl [name = 'T min', init = 0.00100000, min = 1.00000e-06, max = 1.00000e+06, description = 'the minimum temperature']
		Dbl [name = 'alpha', init = 0.950000, min = 0.000100000, max = 0.999900, description = 'the alpha parameter']
	}
}
node [ id = 125, death = false, type = serv, ref = 'Temperature', name = 'T = T /[ 1+alpha*sqrt(T) ]' ]{
	dads{
		123
	}
	parameters{
		Dbl [name = 'T max', init = 1000.00, min = 1.00000e-06, max = 1.00000e+06, description = 'the maximum temperature']
		Dbl [name = 'T min', init = 0.00100000, min = 1.00000e-06, max = 1.00000e+06, description = 'the minimum temperature']
		Dbl [name = 'alpha', init = 0.950000, min = 0.000100000, max = 0.999900, description = 'the alpha parameter']
	}
}
node [ id = 126, death = false, type = factory, ref = 'Approach', name = 'Problem' ]{
	services{
		-,-,-,67,68,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-
	}
}
node [ id = 127, death = false, type = factory, ref = 'Approach', name = 'fOptimalProblem' ]{
	services{
		128,129
	}
}
node [ id = 128, death = false, type = serv, ref = 'aOptimalProblem', name = 'TSP' ]{
	dads{
		127
	}
	services{
		130
	}
}
node [ id = 129, death = false, type = serv, ref = 'aOptimalProblem', name = 'CCQSP' ]{
	dads{
		127
	}
}
node [ id = 130, death = false, type = serv, ref = 'Instance', name = 'Instance-TSP' ]{
	dads{
		128
	}
	parameters{
		FileRgx[name = 'Instances for TSP', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 131, death = false, type = factory, ref = 'Approach', name = 'Models' ]{
	services{
		132,133,134,135,136,137,138,139,140,141
	}
}
node [ id = 132, death = false, type = serv, ref = 'CplexFull', name = 'TSP-full' ]{
	dads{
		131
	}
	services{
		142
	}
	parameters{
		Int [name = 'Threads', init = 1, min = 0, max = 32, description = 'null']
		Dbl [name = 'Time', init = 3600.00, min = 0.00100000, max = 100000, description = 'null']
		Int [name = 'HistoryTime', init = 0, min = 0, max = 10000, description = 'null']
		Long [name = 'ItLim', init = 1000000000, min = 1, max = 1000000000000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 1.00000e-09, max = 1.00000, description = 'null']
		Dbl [name = 'WorkMem(MB)', init = 128.000, min = 1.00000e-06, max = 1.00000e+06, description = 'null']
		Itens [name = 'NodeSel', init = 2, itens = [Depth-first;BestBound;BestEst;BestEstAlt], description = 'null']
		Itens [name = 'RootAlg', init = 0, itens = [AutoAlg;Primal;Dual;Network;Barrier;Sifting;Concurrent], description = 'null']
		Itens [name = 'MIPEmphasis', init = 0, itens = [Balanced;Feasibility;Optimality;BestBound;HiddenFeas], description = 'null']
		Int [name = 'warning', init = 0, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
	}
}
node [ id = 133, death = false, type = serv, ref = 'CplexFull', name = 'GCIST-Full' ]{
	dads{
		131
	}
	services{
		143
	}
	parameters{
		Int [name = 'Threads', init = 1, min = 0, max = 32, description = 'null']
		Dbl [name = 'Time', init = 3600.00, min = 0.00100000, max = 100000, description = 'null']
		Int [name = 'HistoryTime', init = 0, min = 0, max = 10000, description = 'null']
		Long [name = 'ItLim', init = 1000000000, min = 1, max = 1000000000000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 1.00000e-09, max = 1.00000, description = 'null']
		Dbl [name = 'WorkMem(MB)', init = 128.000, min = 1.00000e-06, max = 1.00000e+06, description = 'null']
		Itens [name = 'NodeSel', init = 2, itens = [Depth-first;BestBound;BestEst;BestEstAlt], description = 'null']
		Itens [name = 'RootAlg', init = 0, itens = [AutoAlg;Primal;Dual;Network;Barrier;Sifting;Concurrent], description = 'null']
		Itens [name = 'MIPEmphasis', init = 0, itens = [Balanced;Feasibility;Optimality;BestBound;HiddenFeas], description = 'null']
		Int [name = 'warning', init = 0, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
	}
}
node [ id = 134, death = false, type = serv, ref = 'CplexFull', name = 'PPDCP-Full' ]{
	dads{
		131
	}
	services{
		144
	}
	parameters{
		Int [name = 'Threads', init = 1, min = 0, max = 32, description = 'null']
		Dbl [name = 'Time', init = 3600.00, min = 0.00100000, max = 100000, description = 'null']
		Int [name = 'HistoryTime', init = 0, min = 0, max = 10000, description = 'null']
		Long [name = 'ItLim', init = 1000000000, min = 1, max = 1000000000000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 1.00000e-09, max = 1.00000, description = 'null']
		Dbl [name = 'WorkMem(MB)', init = 128.000, min = 1.00000e-06, max = 1.00000e+06, description = 'null']
		Itens [name = 'NodeSel', init = 2, itens = [Depth-first;BestBound;BestEst;BestEstAlt], description = 'null']
		Itens [name = 'RootAlg', init = 0, itens = [AutoAlg;Primal;Dual;Network;Barrier;Sifting;Concurrent], description = 'null']
		Itens [name = 'MIPEmphasis', init = 0, itens = [Balanced;Feasibility;Optimality;BestBound;HiddenFeas], description = 'null']
		Int [name = 'warning', init = 0, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
	}
}
node [ id = 135, death = false, type = serv, ref = 'CplexFull', name = 'MLCLSPw-Full' ]{
	dads{
		131
	}
	services{
		145
	}
	parameters{
		Int [name = 'Threads', init = 1, min = 0, max = 32, description = 'null']
		Dbl [name = 'Time', init = 3600.00, min = 0.00100000, max = 100000, description = 'null']
		Int [name = 'HistoryTime', init = 0, min = 0, max = 10000, description = 'null']
		Long [name = 'ItLim', init = 1000000000, min = 1, max = 1000000000000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 1.00000e-09, max = 1.00000, description = 'null']
		Dbl [name = 'WorkMem(MB)', init = 128.000, min = 1.00000e-06, max = 1.00000e+06, description = 'null']
		Itens [name = 'NodeSel', init = 2, itens = [Depth-first;BestBound;BestEst;BestEstAlt], description = 'null']
		Itens [name = 'RootAlg', init = 0, itens = [AutoAlg;Primal;Dual;Network;Barrier;Sifting;Concurrent], description = 'null']
		Itens [name = 'MIPEmphasis', init = 0, itens = [Balanced;Feasibility;Optimality;BestBound;HiddenFeas], description = 'null']
		Int [name = 'warning', init = 0, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
	}
}
node [ id = 136, death = false, type = serv, ref = 'CplexFull', name = 'UAVfull' ]{
	dads{
		131
	}
	factorys{
		[1|null|UAV-Approach]{183}
	}
	needs{
		[1|oFull]{534,535,536,557,558,559}
	}
	parameters{
		Int [name = 'Threads', init = 1, min = 0, max = 32, description = 'null']
		Dbl [name = 'Time', init = 3600.00, min = 0.00100000, max = 100000, description = 'null']
		Int [name = 'HistoryTime', init = 0, min = 0, max = 10000, description = 'null']
		Long [name = 'ItLim', init = 1000000000, min = 1, max = 1000000000000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 1.00000e-09, max = 1.00000, description = 'null']
		Dbl [name = 'WorkMem(MB)', init = 128.000, min = 1.00000e-06, max = 1.00000e+06, description = 'null']
		Itens [name = 'NodeSel', init = 2, itens = [Depth-first;BestBound;BestEst;BestEstAlt], description = 'null']
		Itens [name = 'RootAlg', init = 0, itens = [AutoAlg;Primal;Dual;Network;Barrier;Sifting;Concurrent], description = 'null']
		Itens [name = 'MIPEmphasis', init = 0, itens = [Balanced;Feasibility;Optimality;BestBound;HiddenFeas], description = 'null']
		Int [name = 'warning', init = 0, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
	}
}
node [ id = 137, death = false, type = serv, ref = 'CplexFull', name = 'PINF-Cplex' ]{
	dads{
		131
	}
	services{
		146
	}
	parameters{
		Int [name = 'Threads', init = 1, min = 0, max = 32, description = 'null']
		Dbl [name = 'Time', init = 3600.00, min = 0.00100000, max = 100000, description = 'null']
		Int [name = 'HistoryTime', init = 0, min = 0, max = 10000, description = 'null']
		Long [name = 'ItLim', init = 1000000000, min = 1, max = 1000000000000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 1.00000e-09, max = 1.00000, description = 'null']
		Dbl [name = 'WorkMem(MB)', init = 128.000, min = 1.00000e-06, max = 1.00000e+06, description = 'null']
		Itens [name = 'NodeSel', init = 2, itens = [Depth-first;BestBound;BestEst;BestEstAlt], description = 'null']
		Itens [name = 'RootAlg', init = 0, itens = [AutoAlg;Primal;Dual;Network;Barrier;Sifting;Concurrent], description = 'null']
		Itens [name = 'MIPEmphasis', init = 0, itens = [Balanced;Feasibility;Optimality;BestBound;HiddenFeas], description = 'null']
		Int [name = 'warning', init = 0, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
	}
}
node [ id = 138, death = false, type = serv, ref = 'CplexFull', name = 'RICplex' ]{
	dads{
		131
	}
	services{
		147
	}
	parameters{
		Int [name = 'Threads', init = 1, min = 0, max = 32, description = 'null']
		Dbl [name = 'Time', init = 3600.00, min = 0.00100000, max = 100000, description = 'null']
		Int [name = 'HistoryTime', init = 0, min = 0, max = 10000, description = 'null']
		Long [name = 'ItLim', init = 1000000000, min = 1, max = 1000000000000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 1.00000e-09, max = 1.00000, description = 'null']
		Dbl [name = 'WorkMem(MB)', init = 128.000, min = 1.00000e-06, max = 1.00000e+06, description = 'null']
		Itens [name = 'NodeSel', init = 2, itens = [Depth-first;BestBound;BestEst;BestEstAlt], description = 'null']
		Itens [name = 'RootAlg', init = 0, itens = [AutoAlg;Primal;Dual;Network;Barrier;Sifting;Concurrent], description = 'null']
		Itens [name = 'MIPEmphasis', init = 0, itens = [Balanced;Feasibility;Optimality;BestBound;HiddenFeas], description = 'null']
		Int [name = 'warning', init = 0, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
		Itens [name = 'Objective', init = 0, itens = [MIQP;MILP-16;MILP-32;MILP-64;MILP-320], description = 'null']
		Int [name = 'Init x0', init = 0, min = 0, max = 1, description = 'null']
	}
}
node [ id = 139, death = false, type = serv, ref = 'CplexFull', name = 'HCCQSP-full' ]{
	dads{
		131
	}
	parameters{
		Int [name = 'Threads', init = 1, min = 0, max = 32, description = 'null']
		Dbl [name = 'Time', init = 3600.00, min = 0.00100000, max = 100000, description = 'null']
		Int [name = 'HistoryTime', init = 0, min = 0, max = 10000, description = 'null']
		Long [name = 'ItLim', init = 1000000000, min = 1, max = 1000000000000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 1.00000e-09, max = 1.00000, description = 'null']
		Dbl [name = 'WorkMem(MB)', init = 128.000, min = 1.00000e-06, max = 1.00000e+06, description = 'null']
		Itens [name = 'NodeSel', init = 2, itens = [Depth-first;BestBound;BestEst;BestEstAlt], description = 'null']
		Itens [name = 'RootAlg', init = 0, itens = [AutoAlg;Primal;Dual;Network;Barrier;Sifting;Concurrent], description = 'null']
		Itens [name = 'MIPEmphasis', init = 0, itens = [Balanced;Feasibility;Optimality;BestBound;HiddenFeas], description = 'null']
		Int [name = 'warning', init = 0, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
	}
}
node [ id = 140, death = false, type = serv, ref = 'CplexFull', name = 'HCCQSP-mount' ]{
	dads{
		131
	}
	factorys{
		[.|null|fState]{504}
		[.|null|fControl]{512}
		[.|null|fLiteral]{517}
	}
	needs{
		[+|oState]{505,506,507,508,509,510,511}
		[+|oControl]{513,514,515,516}
		[+|oLiteral]{518,519}
	}
	parameters{
		Int [name = 'Threads', init = 1, min = 0, max = 32, description = 'null']
		Dbl [name = 'Time', init = 3600.00, min = 0.00100000, max = 100000, description = 'null']
		Int [name = 'HistoryTime', init = 0, min = 0, max = 10000, description = 'null']
		Long [name = 'ItLim', init = 1000000000, min = 1, max = 1000000000000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 1.00000e-09, max = 1.00000, description = 'null']
		Dbl [name = 'WorkMem(MB)', init = 128.000, min = 1.00000e-06, max = 1.00000e+06, description = 'null']
		Itens [name = 'NodeSel', init = 2, itens = [Depth-first;BestBound;BestEst;BestEstAlt], description = 'null']
		Itens [name = 'RootAlg', init = 0, itens = [AutoAlg;Primal;Dual;Network;Barrier;Sifting;Concurrent], description = 'null']
		Itens [name = 'MIPEmphasis', init = 0, itens = [Balanced;Feasibility;Optimality;BestBound;HiddenFeas], description = 'null']
		Int [name = 'warning', init = 0, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
	}
}
node [ id = 141, death = false, type = serv, ref = 'CplexFull', name = 'MLCLSP-full' ]{
	dads{
		131
	}
	services{
		148
	}
	parameters{
		Int [name = 'Threads', init = 1, min = 0, max = 32, description = 'null']
		Dbl [name = 'Time', init = 3600.00, min = 0.00100000, max = 100000, description = 'null']
		Int [name = 'HistoryTime', init = 0, min = 0, max = 10000, description = 'null']
		Long [name = 'ItLim', init = 1000000000, min = 1, max = 1000000000000, description = 'null']
		Dbl [name = 'Gap Rel', init = 0.000100000, min = 1.00000e-09, max = 1.00000, description = 'null']
		Dbl [name = 'WorkMem(MB)', init = 128.000, min = 1.00000e-06, max = 1.00000e+06, description = 'null']
		Itens [name = 'NodeSel', init = 2, itens = [Depth-first;BestBound;BestEst;BestEstAlt], description = 'null']
		Itens [name = 'RootAlg', init = 0, itens = [AutoAlg;Primal;Dual;Network;Barrier;Sifting;Concurrent], description = 'null']
		Itens [name = 'MIPEmphasis', init = 0, itens = [Balanced;Feasibility;Optimality;BestBound;HiddenFeas], description = 'null']
		Int [name = 'warning', init = 0, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
	}
}
node [ id = 142, death = false, type = serv, ref = 'Instance', name = 'Instance-TSP' ]{
	dads{
		132
	}
	parameters{
		FileRgx[name = 'Instances for TSP', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 143, death = false, type = serv, ref = 'Instance', name = 'GCIST-Instance' ]{
	dads{
		133
	}
	parameters{
		FileRgx[name = 'Instance for GCIST', description = 'null', regex = '(.*\.dat)', constrants = null]
	}
}
node [ id = 144, death = false, type = serv, ref = 'Instance', name = 'Instance-PPDCP' ]{
	dads{
		134
	}
	parameters{
		FileRgx[name = 'Map for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		FileRgx[name = 'Dinamic for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		Itens [name = 'Objectives', init = 3, itens = [SQRNorm2CPX;Norm1;Norm2Aprox32;SQRNorm2Aprox32], description = 'null']
		Itens [name = 'Extra Restrictions', init = 1, itens = [Empty;New], description = 'null']
	}
}
node [ id = 145, death = false, type = serv, ref = 'Instance', name = 'MLCLSPwB-Instance' ]{
	dads{
		135
	}
	parameters{
		FileRgx[name = 'Instance for MLCLSPwB', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 146, death = false, type = serv, ref = 'Instance', name = 'PINFInstance' ]{
	dads{
		137
	}
	parameters{
		FileRgx[name = 'File for TSP', description = 'null', regex = '(.*\.dat)', constrants = null]
	}
}
node [ id = 147, death = false, type = serv, ref = 'Instance', name = 'RealeImaginario' ]{
	dads{
		138
	}
	parameters{
		FileRgx[name = 'File for RI', description = 'null', regex = '(.*\.dat)|(.*\.pos)|(.*\.csv)', constrants = null]
	}
}
node [ id = 148, death = false, type = serv, ref = 'Instance', name = 'Instance-MLCLSP' ]{
	dads{
		141
	}
	parameters{
		FileRgx[name = 'Instances for MLCLSP', description = 'null', regex = '(.*\.inst)', constrants = null]
	}
}
node [ id = 149, death = false, type = factory, ref = 'Approach', name = 'Population' ]{
	services{
		150,151
	}
}
node [ id = 150, death = false, type = serv, ref = 'Population', name = 'Convergence' ]{
	dads{
		149
	}
	services{
		41,42,43
	}
	factorys{
		[1|null|Structure]{520}
	}
	parameters{
		Dbl [name = 'Crossover Rate', init = 5.00000, min = 0.00000, max = 100.000, description = 'null']
		Dbl [name = 'Mutation Rate', init = 0.700000, min = 0.00000, max = 1.00000, description = 'null']
	}
}
node [ id = 151, death = false, type = serv, ref = 'Population', name = 'NumberOfGenerations' ]{
	dads{
		149
	}
	services{
		41,42,43
	}
	parameters{
		Int [name = 'Generations', init = 5, min = 0, max = 100000, description = 'null']
		Dbl [name = 'Mutation Rate', init = 0.700000, min = 0.00000, max = 1.00000, description = 'null']
	}
}
node [ id = 152, death = false, type = factory, ref = 'Approach', name = 'Local Improvement' ]{
	services{
		153,154,155,156,157,158
	}
}
node [ id = 153, death = false, type = serv, ref = 'LocalImprovement', name = 'Nothing' ]{
	dads{
		152
	}
}
node [ id = 154, death = false, type = serv, ref = 'LocalImprovement', name = 'Frist Improvement' ]{
	dads{
		152
	}
	services{
		46
	}
	parameters{
		Int [name = 'neighborhood', init = 100, min = 1, max = 1000000, description = 'number of neighbors generates to get the next current solution']
	}
}
node [ id = 155, death = false, type = serv, ref = 'LocalImprovement', name = 'Best Improvement' ]{
	dads{
		152
	}
	services{
		46
	}
	parameters{
		Int [name = 'neighborhood', init = 100, min = 1, max = 1000000, description = 'number of neighbors generates to get the next current solution']
	}
}
node [ id = 156, death = false, type = serv, ref = 'LocalImprovement', name = 'Threshold Accepting' ]{
	dads{
		152
	}
	services{
		46
	}
	parameters{
		Int [name = 'neighborhood', init = 100, min = 1, max = 1000000, description = 'number of neighbors generates to get the next current solution']
		Dbl [name = 'Threshold', init = 1.00000, min = 0.0100000, max = 100.000, description = 'threshold to acept neibor as current solution']
		Dbl [name = 'Th-improved', init = 0.0200000, min = 0.00100000, max = 100.000, description = 'threshold decrement when the best solution is improved']
		Dbl [name = 'Th-accept', init = 0.0100000, min = 0.00100000, max = 100.000, description = 'threshold decrement when the neibor is acepted as current solution']
		Dbl [name = 'Th-reject', init = 0.00500000, min = 0.00100000, max = 100.000, description = 'threshold decrement when the neibor is rejected as current solution']
	}
}
node [ id = 157, death = false, type = serv, ref = 'LocalImprovement', name = 'Simulated Annealing' ]{
	dads{
		152
	}
	services{
		46
	}
	factorys{
		[1|null|Temperature Functions]{123}
	}
}
node [ id = 158, death = false, type = serv, ref = 'LocalImprovement', name = 'Tabu Search' ]{
	dads{
		152
	}
	services{
		46
	}
	factorys{
		[1|null|Tabu]{527}
	}
	parameters{
		Int [name = 'neighborhood', init = 100, min = 1, max = 1000000, description = 'number of neighbors generates to get the next current solution']
		Int [name = 'stop', init = 10, min = 1, max = 1000000, description = 'number of iterations without improvements to stop the evolution']
	}
}
node [ id = 159, death = false, type = factory, ref = 'Approach', name = 'Artificial Immune System' ]{
	services{
		160,161,162,163
	}
}
node [ id = 160, death = false, type = serv, ref = 'AIS', name = 'Inverse' ]{
	dads{
		159
	}
	parameters{
		Int [name = 'antibodies number', init = 100, min = 1, max = 1000000, description = 'null']
		Int [name = 'keep number', init = 80, min = 1, max = 1000000, description = 'null']
		Int [name = 'clones number', init = 200, min = 1, max = 1000000, description = 'null']
	}
}
node [ id = 161, death = false, type = serv, ref = 'AIS', name = 'Exponential' ]{
	dads{
		159
	}
	parameters{
		Int [name = 'antibodies number', init = 100, min = 1, max = 1000000, description = 'null']
		Int [name = 'keep number', init = 80, min = 1, max = 1000000, description = 'null']
		Int [name = 'clones number', init = 200, min = 1, max = 1000000, description = 'null']
		Dbl [name = 'exponential base', init = 1.10000, min = 1.00000, max = 10.0000, description = 'null']
	}
}
node [ id = 162, death = false, type = serv, ref = 'AIS', name = 'Linear' ]{
	dads{
		159
	}
	parameters{
		Int [name = 'antibodies number', init = 100, min = 1, max = 1000000, description = 'null']
		Int [name = 'keep number', init = 80, min = 1, max = 1000000, description = 'null']
		Int [name = 'clones number', init = 200, min = 1, max = 1000000, description = 'null']
		Dbl [name = 'cloning spread', init = 1.00000, min = 0.100000, max = 10.0000, description = 'null']
	}
}
node [ id = 163, death = false, type = serv, ref = 'AIS', name = 'Hill' ]{
	dads{
		159
	}
	parameters{
		Int [name = 'antibodies number', init = 100, min = 1, max = 1000000, description = 'null']
		Int [name = 'keep number', init = 80, min = 1, max = 1000000, description = 'null']
		Int [name = 'clones number', init = 200, min = 1, max = 1000000, description = 'null']
		Dbl [name = 'hill point', init = 0.100000, min = 0.00000, max = 1.00000, description = 'null']
		Dbl [name = 'cloning spread', init = 1.00000, min = 0.100000, max = 10.0000, description = 'null']
	}
}
node [ id = 164, death = false, type = factory, ref = 'Approach', name = 'fBranchProblem' ]{
	services{
		165
	}
}
node [ id = 165, death = false, type = serv, ref = 'BranchProblem', name = 'bTSP' ]{
	dads{
		164
	}
	services{
		166,167
	}
	factorys{
		[.|null|ExactTSP Operators]{530}
	}
}
node [ id = 166, death = false, type = serv, ref = 'BranchBest', name = 'BestSol' ]{
	dads{
		165
	}
	services{
		115,168
	}
	needs{
		[1|Stop]{56,62,117,118,119,120,121,122}
	}
	parameters{
		Dbl [name = 'progress-factor', init = 0.0100000, min = -0.0100000, max = 0.500000, description = 'null']
	}
}
node [ id = 167, death = false, type = serv, ref = 'Instance', name = 'Instance-TSP' ]{
	dads{
		165
	}
	parameters{
		FileRgx[name = 'Instances for TSP', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 168, death = false, type = single, ref = 'ApproachSingle', name = 'CountInteger' ]{
	dads{
		166
	}
}
node [ id = 169, death = false, type = factory, ref = 'Approach', name = 'fDynamic' ]{
	services{
		170
	}
}
node [ id = 170, death = false, type = serv, ref = 'aDyProblem', name = 'Dy-Walker' ]{
	dads{
		169
	}
}
node [ id = 171, death = false, type = factory, ref = 'Approach', name = 'fRFFOModel' ]{
	services{
		172,173,174,175,176
	}
}
node [ id = 172, death = false, type = serv, ref = 'RFFOModel', name = 'GCIST' ]{
	dads{
		171
	}
	services{
		177
	}
	parameters{
		Int [name = 'Threads', init = 1, min = 0, max = 32, description = 'null']
		Int [name = 'HistoryTime', init = 0, min = 0, max = 10000, description = 'null']
		Int [name = 'rf-Inc', init = 10, min = 1, max = 2147483647, description = 'null']
		Long [name = 'NodeLim(RF)', init = 1000, min = 1, max = 1000000000000, description = 'null']
		Long [name = 'NodeLim(FO)', init = 2000, min = 1, max = 1000000000000, description = 'null']
		Dbl [name = 'EpGap', init = 0.000100000, min = 1.00000e-09, max = 1.00000, description = 'null']
		Dbl [name = 'WorkMem(MB)', init = 128.000, min = 1.00000e-06, max = 1.00000e+06, description = 'null']
		Itens [name = 'NodeSel', init = 2, itens = [Depth-first;BestBound;BestEst;BestEstAlt], description = 'null']
		Itens [name = 'RootAlg', init = 0, itens = [AutoAlg;Primal;Dual;Network;Barrier;Sifting;Concurrent], description = 'null']
		Itens [name = 'MIPEmphasis', init = 0, itens = [Balanced;Feasibility;Optimality;BestBound;HiddenFeas], description = 'null']
		Int [name = 'warning', init = 1, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
		Itens [name = 'RF-Type', init = 0, itens = [value-wise;product>machine>period;product>period>machine;machine>product>period;machine>period>product;period>machine>product;period>product>machine], description = 'null']
		Itens [name = 'FO-Type', init = 6, itens = [product>machine>period;product>period>machine;machine>product>period;machine>period>product;period>machine>product;period>product>machine;period>machine|product;period>snake], description = 'null']
	}
}
node [ id = 173, death = false, type = serv, ref = 'RFFOModel', name = 'PPDCP' ]{
	dads{
		171
	}
	services{
		178
	}
	parameters{
		Int [name = 'Threads', init = 1, min = 0, max = 32, description = 'null']
		Int [name = 'HistoryTime', init = 0, min = 0, max = 10000, description = 'null']
		Int [name = 'rf-Inc', init = 10, min = 1, max = 2147483647, description = 'null']
		Long [name = 'NodeLim(RF)', init = 1000, min = 1, max = 1000000000000, description = 'null']
		Long [name = 'NodeLim(FO)', init = 2000, min = 1, max = 1000000000000, description = 'null']
		Dbl [name = 'EpGap', init = 0.000100000, min = 1.00000e-09, max = 1.00000, description = 'null']
		Dbl [name = 'WorkMem(MB)', init = 128.000, min = 1.00000e-06, max = 1.00000e+06, description = 'null']
		Itens [name = 'NodeSel', init = 2, itens = [Depth-first;BestBound;BestEst;BestEstAlt], description = 'null']
		Itens [name = 'RootAlg', init = 0, itens = [AutoAlg;Primal;Dual;Network;Barrier;Sifting;Concurrent], description = 'null']
		Itens [name = 'MIPEmphasis', init = 0, itens = [Balanced;Feasibility;Optimality;BestBound;HiddenFeas], description = 'null']
		Int [name = 'warning', init = 1, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
	}
}
node [ id = 174, death = false, type = serv, ref = 'RFFOModel', name = 'MLCLSPwB' ]{
	dads{
		171
	}
	services{
		179
	}
	parameters{
		Int [name = 'Threads', init = 1, min = 0, max = 32, description = 'null']
		Int [name = 'HistoryTime', init = 0, min = 0, max = 10000, description = 'null']
		Int [name = 'rf-Inc', init = 10, min = 1, max = 2147483647, description = 'null']
		Long [name = 'NodeLim(RF)', init = 1000, min = 1, max = 1000000000000, description = 'null']
		Long [name = 'NodeLim(FO)', init = 2000, min = 1, max = 1000000000000, description = 'null']
		Dbl [name = 'EpGap', init = 0.000100000, min = 1.00000e-09, max = 1.00000, description = 'null']
		Dbl [name = 'WorkMem(MB)', init = 128.000, min = 1.00000e-06, max = 1.00000e+06, description = 'null']
		Itens [name = 'NodeSel', init = 2, itens = [Depth-first;BestBound;BestEst;BestEstAlt], description = 'null']
		Itens [name = 'RootAlg', init = 0, itens = [AutoAlg;Primal;Dual;Network;Barrier;Sifting;Concurrent], description = 'null']
		Itens [name = 'MIPEmphasis', init = 0, itens = [Balanced;Feasibility;Optimality;BestBound;HiddenFeas], description = 'null']
		Int [name = 'warning', init = 1, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
		Itens [name = 'RF-Type', init = 0, itens = [value-wise;row-wise;column-wise], description = 'null']
		Itens [name = 'FO-Type', init = 2, itens = [only row;only column;row>>column;column>>row], description = 'null']
	}
}
node [ id = 175, death = false, type = serv, ref = 'RFFOModel', name = 'TSP-rffo' ]{
	dads{
		171
	}
	services{
		180
	}
	parameters{
		Int [name = 'Threads', init = 1, min = 0, max = 32, description = 'null']
		Int [name = 'HistoryTime', init = 0, min = 0, max = 10000, description = 'null']
		Int [name = 'rf-Inc', init = 10, min = 1, max = 2147483647, description = 'null']
		Long [name = 'NodeLim(RF)', init = 1000, min = 1, max = 1000000000000, description = 'null']
		Long [name = 'NodeLim(FO)', init = 2000, min = 1, max = 1000000000000, description = 'null']
		Dbl [name = 'EpGap', init = 0.000100000, min = 1.00000e-09, max = 1.00000, description = 'null']
		Dbl [name = 'WorkMem(MB)', init = 128.000, min = 1.00000e-06, max = 1.00000e+06, description = 'null']
		Itens [name = 'NodeSel', init = 2, itens = [Depth-first;BestBound;BestEst;BestEstAlt], description = 'null']
		Itens [name = 'RootAlg', init = 0, itens = [AutoAlg;Primal;Dual;Network;Barrier;Sifting;Concurrent], description = 'null']
		Itens [name = 'MIPEmphasis', init = 0, itens = [Balanced;Feasibility;Optimality;BestBound;HiddenFeas], description = 'null']
		Int [name = 'warning', init = 1, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
	}
}
node [ id = 176, death = false, type = serv, ref = 'RFFOModel', name = 'BlackmoreRFFO' ]{
	dads{
		171
	}
	services{
		181
	}
	needs{
		[1|oFull]{534,535,536,557,558,559}
	}
	parameters{
		Int [name = 'Threads', init = 1, min = 0, max = 32, description = 'null']
		Int [name = 'HistoryTime', init = 0, min = 0, max = 10000, description = 'null']
		Int [name = 'rf-Inc', init = 10, min = 1, max = 2147483647, description = 'null']
		Long [name = 'NodeLim(RF)', init = 1000, min = 1, max = 1000000000000, description = 'null']
		Long [name = 'NodeLim(FO)', init = 2000, min = 1, max = 1000000000000, description = 'null']
		Dbl [name = 'EpGap', init = 0.000100000, min = 1.00000e-09, max = 1.00000, description = 'null']
		Dbl [name = 'WorkMem(MB)', init = 128.000, min = 1.00000e-06, max = 1.00000e+06, description = 'null']
		Itens [name = 'NodeSel', init = 2, itens = [Depth-first;BestBound;BestEst;BestEstAlt], description = 'null']
		Itens [name = 'RootAlg', init = 0, itens = [AutoAlg;Primal;Dual;Network;Barrier;Sifting;Concurrent], description = 'null']
		Itens [name = 'MIPEmphasis', init = 0, itens = [Balanced;Feasibility;Optimality;BestBound;HiddenFeas], description = 'null']
		Int [name = 'warning', init = 1, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
	}
}
node [ id = 177, death = false, type = serv, ref = 'Instance', name = 'GCIST-Instance' ]{
	dads{
		172
	}
	parameters{
		FileRgx[name = 'Instance for GCIST', description = 'null', regex = '(.*\.dat)', constrants = null]
	}
}
node [ id = 178, death = false, type = serv, ref = 'Instance', name = 'Instance-PPDCP' ]{
	dads{
		173
	}
	parameters{
		FileRgx[name = 'Map for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		FileRgx[name = 'Dinamic for PPDCP', description = 'null', regex = '(.*\.sgl)', constrants = null]
		Itens [name = 'Objectives', init = 3, itens = [SQRNorm2CPX;Norm1;Norm2Aprox32;SQRNorm2Aprox32], description = 'null']
		Itens [name = 'Extra Restrictions', init = 1, itens = [Empty;New], description = 'null']
	}
}
node [ id = 179, death = false, type = serv, ref = 'Instance', name = 'MLCLSPwB-Instance' ]{
	dads{
		174
	}
	parameters{
		FileRgx[name = 'Instance for MLCLSPwB', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 180, death = false, type = serv, ref = 'Instance', name = 'Instance-TSP' ]{
	dads{
		175
	}
	parameters{
		FileRgx[name = 'Instances for TSP', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 181, death = false, type = serv, ref = 'LinearApproach', name = 'Blackmore' ]{
	dads{
		176
	}
	services{
		110,182
	}
	factorys{
		[1|null|Vehicle]{449}
		[.|null|Blackmore Operators]{533}
		[1|null|fBlackmoreUncertainty]{542}
		[1|null|Instance Reader]{459}
		[1|null|Objective]{468}
	}
	needs{
		[1|pLinearWaypoints]{594,595,596,597,598,599,600,601,602}
		[1|oLinearDynamic]{585,586,587,588,589,590,591,592,593}
		[1|oCuts]{606,607,608}
	}
	parameters{
		Int [name = 'Avoid-N-risk', init = 12, min = 1, max = 16, description = 'Number of picewise restriction to aproximate the inverse of erf(x) to calculate the risk allocation for obstacle avoidance']
		Int [name = 'Steps', init = 10, min = 5, max = 1000, description = 'Number of steps to perform changes in obstacle edges']
		Int [name = 'Particle-Control', init = 10000, min = 100, max = 1000000000, description = 'null']
	}
}
node [ id = 182, death = false, type = serv, ref = 'Plot', name = 'Blackmore Plot' ]{
	dads{
		181
	}
	parameters{
		Int [name = 'Enable plot', init = 1, min = 0, max = 1, description = 'null']
		Int [name = 'Save png', init = 1, min = 0, max = 1, description = 'null']
		Int [name = 'Save gif', init = 1, min = 0, max = 1, description = 'null']
		Dbl [name = 'resolution', init = 2.50000, min = 0.100000, max = 10.0000, description = 'factor of resolution to save the '.png' results']
	}
}
node [ id = 183, death = false, type = factory, ref = 'Approach', name = 'UAV-Approach' ]{
	services{
		184,185
	}
}
node [ id = 184, death = false, type = serv, ref = 'LinearApproach', name = 'Blackmore' ]{
	dads{
		183
	}
	services{
		110,186
	}
	factorys{
		[1|null|Vehicle]{449}
		[.|null|Blackmore Operators]{533}
		[1|null|fBlackmoreUncertainty]{549}
		[1|null|Instance Reader]{459}
		[1|null|Objective]{468}
	}
	needs{
		[1|pLinearWaypoints]{594,595,596,597,598,599,600,601,602}
		[1|oLinearDynamic]{585,586,587,588,589,590,591,592,593}
		[1|oCuts]{606,607,608}
	}
	parameters{
		Int [name = 'Avoid-N-risk', init = 12, min = 1, max = 16, description = 'Number of picewise restriction to aproximate the inverse of erf(x) to calculate the risk allocation for obstacle avoidance']
		Int [name = 'Steps', init = 10, min = 5, max = 1000, description = 'Number of steps to perform changes in obstacle edges']
		Int [name = 'Particle-Control', init = 10000, min = 100, max = 1000000000, description = 'null']
	}
}
node [ id = 185, death = false, type = serv, ref = 'LinearApproach', name = 'Ono' ]{
	dads{
		183
	}
	services{
		110,187,188
	}
	factorys{
		[1|null|Vehicle]{449}
		[.|null|Ono Operators]{556}
		[1|null|fOnoUncertainty]{560}
		[1|null|Instance Reader]{563}
		[1|null|Objective]{566}
	}
	needs{
		[1|pLinearWaypoints]{594,595,596,597,598,599,600,601,602}
		[1|oLinearDynamic]{585,586,587,588,589,590,591,592,593}
	}
	parameters{
		Int [name = 'Avoid-N-risk', init = 12, min = 1, max = 64, description = 'Number of picewise restriction to aproximate the inverse of erf(x) to calculate the risk allocation for obstacle avoidance']
		Int [name = 'Steps', init = 7, min = 5, max = 1000, description = 'Number of steps to perform changes in obstacle edges']
		ListBool [name = 'Strengthened', itens = [case-1;case-2;case-3;case-5;case-delta;case-swaps;case-implies;bin-St;steps], description = 'null']
	}
}
node [ id = 186, death = false, type = serv, ref = 'Plot', name = 'Blackmore Plot' ]{
	dads{
		184
	}
	parameters{
		Int [name = 'Enable plot', init = 1, min = 0, max = 1, description = 'null']
		Int [name = 'Save png', init = 1, min = 0, max = 1, description = 'null']
		Int [name = 'Save gif', init = 1, min = 0, max = 1, description = 'null']
		Dbl [name = 'resolution', init = 2.50000, min = 0.100000, max = 10.0000, description = 'factor of resolution to save the '.png' results']
	}
}
node [ id = 187, death = false, type = serv, ref = 'Plot', name = 'Ono Plot' ]{
	dads{
		185
	}
	parameters{
		Int [name = 'Enable plot', init = 1, min = 0, max = 1, description = 'null']
		Int [name = 'Save png', init = 1, min = 0, max = 1, description = 'null']
		Int [name = 'Save gif', init = 1, min = 0, max = 1, description = 'null']
		Dbl [name = 'resolution', init = 2.50000, min = 0.100000, max = 10.0000, description = 'factor of resolution to save the '.png' results']
	}
}
node [ id = 188, death = false, type = serv, ref = 'pLinearControlUncertainty', name = 'Control Perfect Unc.' ]{
	dads{
		185
	}
	needs{
		[1|pLinearStateUncertainty]{453,454,455,456,457,458,543,544,545,546,547,548,550,551,552,553,554,555,561,562}
		[1|oLinearDynamic]{585,586,587,588,589,590,591,592,593}
	}
}
node [ id = 189, death = false, type = factory, ref = 'Approach', name = 'Temperature Functions' ]{
	services{
		190,191
	}
}
node [ id = 190, death = false, type = serv, ref = 'aTemp', name = 'T = T * alpha' ]{
	dads{
		189
	}
	parameters{
		Dbl [name = 'T max', init = 1000.00, min = 1.00000e-06, max = 1.00000e+06, description = 'the maximum temperature']
		Dbl [name = 'T min', init = 0.00100000, min = 1.00000e-06, max = 1.00000e+06, description = 'the minimum temperature']
		Dbl [name = 'alpha', init = 0.950000, min = 0.000100000, max = 0.999900, description = 'the alpha parameter']
	}
}
node [ id = 191, death = false, type = serv, ref = 'aTemp', name = 'T = T /[ 1+alpha*sqrt(T) ]' ]{
	dads{
		189
	}
	parameters{
		Dbl [name = 'T max', init = 1000.00, min = 1.00000e-06, max = 1.00000e+06, description = 'the maximum temperature']
		Dbl [name = 'T min', init = 0.00100000, min = 1.00000e-06, max = 1.00000e+06, description = 'the minimum temperature']
		Dbl [name = 'alpha', init = 0.950000, min = 0.000100000, max = 0.999900, description = 'the alpha parameter']
	}
}
node [ id = 192, death = false, type = factory, ref = 'Approach', name = 'Problem' ]{
	services{
		-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,88,-,-,-
	}
}
node [ id = 193, death = false, type = factory, ref = 'Approach', name = 'fPSModel' ]{
	services{
		194
	}
}
node [ id = 194, death = false, type = serv, ref = 'PSModel', name = 'MLCLSP-PS' ]{
	dads{
		193
	}
	services{
		195
	}
	parameters{
		Int [name = 'Threads', init = 1, min = 0, max = 32, description = 'null']
		Dbl [name = 'EpGap', init = 0.000100000, min = 1.00000e-09, max = 1.00000, description = 'null']
		Long [name = 'NodeLim', init = 1000000, min = 1, max = 1000000000000, description = 'null']
		Itens [name = 'NodeSel', init = 2, itens = [Depth-first;BestBound;BestEst;BestEstAlt], description = 'null']
		Itens [name = 'RootAlg', init = 0, itens = [AutoAlg;Primal;Dual;Network;Barrier;Sifting;Concurrent], description = 'null']
		Itens [name = 'MIPEmphasis', init = 0, itens = [Balanced;Feasibility;Optimality;BestBound;HiddenFeas], description = 'null']
		Dbl [name = 'WorkMem(MB)', init = 128.000, min = 1.00000e-06, max = 1.00000e+06, description = 'null']
		Int [name = 'warning', init = 1, min = 0, max = 1, description = 'null']
		Int [name = 'output', init = 1, min = 0, max = 1, description = 'null']
	}
}
node [ id = 195, death = false, type = serv, ref = 'Instance', name = 'Instance-MLCLSP' ]{
	dads{
		194
	}
	parameters{
		FileRgx[name = 'Instances for MLCLSP', description = 'null', regex = '(.*\.inst)', constrants = null]
	}
}
node [ id = 196, death = false, type = factory, ref = 'Approach', name = 'TSP Operators' ]{
	services{
		197,198,199,200,201,202,203,204
	}
}
node [ id = 197, death = false, type = serv, ref = 'oInitialization', name = 'Random Tour' ]{
	dads{
		196
	}
}
node [ id = 198, death = false, type = serv, ref = 'oMutation', name = 'Mut-Exchange' ]{
	dads{
		196
	}
}
node [ id = 199, death = false, type = serv, ref = 'oCrossover', name = 'TwoPoints' ]{
	dads{
		196
	}
}
node [ id = 200, death = false, type = serv, ref = 'oLocalMove', name = 'Mov-Exchange' ]{
	dads{
		196
	}
}
node [ id = 201, death = false, type = serv, ref = 'oGreedyConstruction', name = 'Greedy Construction' ]{
	dads{
		196
	}
}
node [ id = 202, death = false, type = serv, ref = 'TrailPheromone', name = 'Trail <-- 1/N' ]{
	dads{
		196
	}
	parameters{
		Dbl [name = 'decay rate', init = 0.500000, min = 0.00000, max = 1.00000, description = 'null']
	}
}
node [ id = 203, death = false, type = serv, ref = 'TrailPheromone', name = 'Trail <-- random' ]{
	dads{
		196
	}
	parameters{
		Dbl [name = 'decay rate', init = 0.500000, min = 0.00000, max = 1.00000, description = 'null']
	}
}
node [ id = 204, death = false, type = serv, ref = 'TrailPheromone', name = 'Trail <-- 1/Cij' ]{
	dads{
		196
	}
	parameters{
		Dbl [name = 'decay rate', init = 0.500000, min = 0.00000, max = 1.00000, description = 'null']
	}
}
node [ id = 205, death = false, type = factory, ref = 'Approach', name = 'fRealSingle' ]{
	services{
		206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221
	}
}
node [ id = 206, death = false, type = serv, ref = 'RealSingle', name = 'ACK' ]{
	dads{
		205
	}
	parameters{
		Int [name = 'ACK-n', init = 10, min = 1, max = 1073741824, description = 'default n=10']
	}
}
node [ id = 207, death = false, type = serv, ref = 'RealSingle', name = 'AP' ]{
	dads{
		205
	}
}
node [ id = 208, death = false, type = serv, ref = 'RealSingle', name = 'B2' ]{
	dads{
		205
	}
}
node [ id = 209, death = false, type = serv, ref = 'RealSingle', name = 'BF1' ]{
	dads{
		205
	}
}
node [ id = 210, death = false, type = serv, ref = 'RealSingle', name = 'BF2' ]{
	dads{
		205
	}
}
node [ id = 211, death = false, type = serv, ref = 'RealSingle', name = 'BL' ]{
	dads{
		205
	}
}
node [ id = 212, death = false, type = serv, ref = 'RealSingle', name = 'BP' ]{
	dads{
		205
	}
}
node [ id = 213, death = false, type = serv, ref = 'RealSingle', name = 'CB3' ]{
	dads{
		205
	}
}
node [ id = 214, death = false, type = serv, ref = 'RealSingle', name = 'CB6' ]{
	dads{
		205
	}
}
node [ id = 215, death = false, type = serv, ref = 'RealSingle', name = 'CM' ]{
	dads{
		205
	}
	parameters{
		Int [name = 'CM-n', init = 2, min = 1, max = 1073741824, description = 'default n=2 or 4']
	}
}
node [ id = 216, death = false, type = serv, ref = 'RealSingle', name = 'DA' ]{
	dads{
		205
	}
}
node [ id = 217, death = false, type = serv, ref = 'RealSingle', name = 'EM' ]{
	dads{
		205
	}
	parameters{
		Int [name = 'EM-n', init = 5, min = 1, max = 1073741824, description = 'default n=5 or 10']
	}
}
node [ id = 218, death = false, type = serv, ref = 'RealSingle', name = 'EP' ]{
	dads{
		205
	}
}
node [ id = 219, death = false, type = serv, ref = 'RealSingle', name = 'EXP' ]{
	dads{
		205
	}
	parameters{
		Int [name = 'EXP-n', init = 2, min = 1, max = 1073741824, description = 'default n=10']
	}
}
node [ id = 220, death = false, type = serv, ref = 'RealSingle', name = 'GP' ]{
	dads{
		205
	}
}
node [ id = 221, death = false, type = serv, ref = 'RealSingle', name = 'Snake-1' ]{
	dads{
		205
	}
}
node [ id = 222, death = false, type = factory, ref = 'Approach', name = 'Codif-Real Operators' ]{
	services{
		223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239
	}
}
node [ id = 223, death = false, type = serv, ref = 'oCrossover', name = 'Average' ]{
	dads{
		222
	}
}
node [ id = 224, death = false, type = serv, ref = 'oCrossover', name = 'Geometric' ]{
	dads{
		222
	}
}
node [ id = 225, death = false, type = serv, ref = 'oCrossover', name = 'One-point' ]{
	dads{
		222
	}
}
node [ id = 226, death = false, type = serv, ref = 'oCrossover', name = 'Two-points' ]{
	dads{
		222
	}
}
node [ id = 227, death = false, type = serv, ref = 'oCrossover', name = 'OX' ]{
	dads{
		222
	}
}
node [ id = 228, death = false, type = serv, ref = 'oCrossover', name = 'OX-Fast' ]{
	dads{
		222
	}
}
node [ id = 229, death = false, type = serv, ref = 'oCrossover', name = 'BLX-a' ]{
	dads{
		222
	}
	parameters{
		Dbl [name = 'BLX-alpha', init = 1.00000, min = 0.00000, max = 2.00000, description = 'null']
	}
}
node [ id = 230, death = false, type = serv, ref = 'oCrossover', name = 'Heuristic' ]{
	dads{
		222
	}
}
node [ id = 231, death = false, type = serv, ref = 'oCrossover', name = 'Linear' ]{
	dads{
		222
	}
}
node [ id = 232, death = false, type = serv, ref = 'oCrossover', name = 'Aritmetic' ]{
	dads{
		222
	}
}
node [ id = 233, death = false, type = serv, ref = 'oMutation', name = 'Replace' ]{
	dads{
		222
	}
}
node [ id = 234, death = false, type = serv, ref = 'oMutation', name = 'Limit' ]{
	dads{
		222
	}
}
node [ id = 235, death = false, type = serv, ref = 'oMutation', name = 'Invert' ]{
	dads{
		222
	}
}
node [ id = 236, death = false, type = serv, ref = 'oLocalMove', name = 'Replace' ]{
	dads{
		222
	}
}
node [ id = 237, death = false, type = serv, ref = 'oLocalMove', name = 'Limit' ]{
	dads{
		222
	}
}
node [ id = 238, death = false, type = serv, ref = 'oLocalMove', name = 'Invert' ]{
	dads{
		222
	}
}
node [ id = 239, death = false, type = serv, ref = 'oInitialization', name = 'Random' ]{
	dads{
		222
	}
}
node [ id = 240, death = false, type = factory, ref = 'Approach', name = 'Codif-Real Operators' ]{
	services{
		241,242,243,244
	}
}
node [ id = 241, death = false, type = serv, ref = 'oInitialization', name = 'Random' ]{
	dads{
		240
	}
}
node [ id = 242, death = false, type = serv, ref = 'oCrossover', name = 'OX' ]{
	dads{
		240
	}
}
node [ id = 243, death = false, type = serv, ref = 'oMutation', name = 'Invert' ]{
	dads{
		240
	}
}
node [ id = 244, death = false, type = serv, ref = 'oLocalMove', name = 'Invert' ]{
	dads{
		240
	}
}
node [ id = 245, death = false, type = factory, ref = 'Approach', name = 'fRealMulti' ]{
	services{
		246,247,248,249,250,251,252,253
	}
}
node [ id = 246, death = false, type = serv, ref = 'RealMulti', name = 'FON' ]{
	dads{
		245
	}
}
node [ id = 247, death = false, type = serv, ref = 'RealMulti', name = 'Golinski' ]{
	dads{
		245
	}
	parameters{
		Dbl [name = 'g-penality', init = 1.00000e+06, min = 0.00000, max = 1.00000e+09, description = 'null']
	}
}
node [ id = 248, death = false, type = serv, ref = 'RealMulti', name = 'KUR' ]{
	dads{
		245
	}
}
node [ id = 249, death = false, type = serv, ref = 'RealMulti', name = 'Osyczka2' ]{
	dads{
		245
	}
	parameters{
		Dbl [name = 'g-penality', init = 1.00000e+06, min = 0.00000, max = 1.00000e+09, description = 'null']
	}
}
node [ id = 250, death = false, type = serv, ref = 'RealMulti', name = 'POL' ]{
	dads{
		245
	}
}
node [ id = 251, death = false, type = serv, ref = 'RealMulti', name = 'Schaffer' ]{
	dads{
		245
	}
}
node [ id = 252, death = false, type = serv, ref = 'RealMulti', name = 'Srinivas' ]{
	dads{
		245
	}
	parameters{
		Dbl [name = 'g-penality', init = 1.00000e+06, min = 0.00000, max = 1.00000e+09, description = 'null']
	}
}
node [ id = 253, death = false, type = serv, ref = 'RealMulti', name = 'Tanaka' ]{
	dads{
		245
	}
	parameters{
		Dbl [name = 'g-penality', init = 1.00000e+06, min = 0.00000, max = 1.00000e+09, description = 'null']
	}
}
node [ id = 254, death = false, type = factory, ref = 'Approach', name = 'ACK Init' ]{
	services{
		255
	}
}
node [ id = 255, death = false, type = serv, ref = 'oInitialization', name = 'Random Value' ]{
	dads{
		254
	}
}
node [ id = 256, death = false, type = factory, ref = 'Approach', name = 'ACK Cross' ]{
	services{
		257
	}
}
node [ id = 257, death = false, type = serv, ref = 'oCrossover', name = 'BLX-α' ]{
	dads{
		256
	}
	parameters{
		Dbl [name = 'alpha', init = 1.00000, min = 4.90000e-324, max = 1.79769e+308, description = 'null']
	}
}
node [ id = 258, death = false, type = factory, ref = 'Approach', name = 'ACK Mut' ]{
	services{
		259
	}
}
node [ id = 259, death = false, type = serv, ref = 'oMutation', name = 'Uniform' ]{
	dads{
		258
	}
}
node [ id = 260, death = false, type = factory, ref = 'Approach', name = 'Solver' ]{
	services{
		261
	}
}
node [ id = 261, death = false, type = serv, ref = 'aGCI', name = 'Cavit Heuristic' ]{
	dads{
		260
	}
	needs{
		[1|GCIFactory]{70}
	}
}
node [ id = 262, death = false, type = factory, ref = 'Approach', name = 'GCI Operators' ]{
	services{
		263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281
	}
}
node [ id = 263, death = false, type = serv, ref = 'oInitialization', name = 'A(k , t) = i*' ]{
	dads{
		262
	}
}
node [ id = 264, death = false, type = serv, ref = 'oLocalMove', name = 'Change One' ]{
	dads{
		262
	}
}
node [ id = 265, death = false, type = serv, ref = 'oLocalMove', name = 'Change Two' ]{
	dads{
		262
	}
}
node [ id = 266, death = false, type = serv, ref = 'oLocalMove', name = 'Swap Products' ]{
	dads{
		262
	}
}
node [ id = 267, death = false, type = serv, ref = 'oLocalMove', name = 'Swap in K' ]{
	dads{
		262
	}
}
node [ id = 268, death = false, type = serv, ref = 'oLocalMove', name = 'Swap in T' ]{
	dads{
		262
	}
}
node [ id = 269, death = false, type = serv, ref = 'oLocalMove', name = 'Furnance E/D' ]{
	dads{
		262
	}
}
node [ id = 270, death = false, type = serv, ref = 'oMutation', name = 'Change One' ]{
	dads{
		262
	}
}
node [ id = 271, death = false, type = serv, ref = 'oMutation', name = 'Change Two' ]{
	dads{
		262
	}
}
node [ id = 272, death = false, type = serv, ref = 'oMutation', name = 'Swap Products' ]{
	dads{
		262
	}
}
node [ id = 273, death = false, type = serv, ref = 'oMutation', name = 'Swap in K' ]{
	dads{
		262
	}
}
node [ id = 274, death = false, type = serv, ref = 'oMutation', name = 'Swap in T' ]{
	dads{
		262
	}
}
node [ id = 275, death = false, type = serv, ref = 'oMutation', name = 'Furnance E/D' ]{
	dads{
		262
	}
}
node [ id = 276, death = false, type = serv, ref = 'oCrossover', name = 'OX-rmd' ]{
	dads{
		262
	}
}
node [ id = 277, death = false, type = serv, ref = 'oCrossover', name = '1PT-rmd' ]{
	dads{
		262
	}
}
node [ id = 278, death = false, type = serv, ref = 'oCrossover', name = '1PK-rmd' ]{
	dads{
		262
	}
}
node [ id = 279, death = false, type = serv, ref = 'oCrossover', name = 'OX-min' ]{
	dads{
		262
	}
}
node [ id = 280, death = false, type = serv, ref = 'oCrossover', name = '1PT-min' ]{
	dads{
		262
	}
}
node [ id = 281, death = false, type = serv, ref = 'oCrossover', name = '1PK-min' ]{
	dads{
		262
	}
}
node [ id = 282, death = false, type = factory, ref = 'Approach', name = 'Model' ]{
	services{
		283,284,285
	}
}
node [ id = 283, death = false, type = serv, ref = 'aGCILTModel', name = 'Greedy' ]{
	dads{
		282
	}
	needs{
		[1|Problem]{64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91}
		[1|BestSol]{92}
	}
}
node [ id = 284, death = false, type = serv, ref = 'aGCILTModel', name = 'CplexInt' ]{
	dads{
		282
	}
	needs{
		[1|Problem]{64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91}
		[1|BestSol]{92}
	}
}
node [ id = 285, death = false, type = serv, ref = 'aGCILTModel', name = 'CplexNum' ]{
	dads{
		282
	}
	needs{
		[1|Problem]{64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91}
		[1|BestSol]{92}
	}
}
node [ id = 286, death = false, type = factory, ref = 'Approach', name = 'GCILT Operators' ]{
	services{
		287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306
	}
}
node [ id = 287, death = false, type = serv, ref = 'oInitialization', name = 'Initializer' ]{
	dads{
		286
	}
}
node [ id = 288, death = false, type = serv, ref = 'oCrossover', name = 'Cr. Macro OX' ]{
	dads{
		286
	}
}
node [ id = 289, death = false, type = serv, ref = 'oCrossover', name = 'Cr. Macro 1PT' ]{
	dads{
		286
	}
}
node [ id = 290, death = false, type = serv, ref = 'oCrossover', name = 'Cr. Macro 1PY' ]{
	dads{
		286
	}
}
node [ id = 291, death = false, type = serv, ref = 'oCrossover', name = 'Cr. Micro OX' ]{
	dads{
		286
	}
}
node [ id = 292, death = false, type = serv, ref = 'oCrossover', name = 'Cr. Micro 1P' ]{
	dads{
		286
	}
}
node [ id = 293, death = false, type = serv, ref = 'oMutation', name = 'Mut. Color Change' ]{
	dads{
		286
	}
}
node [ id = 294, death = false, type = serv, ref = 'oMutation', name = 'Mut. Lot Swap' ]{
	dads{
		286
	}
}
node [ id = 295, death = false, type = serv, ref = 'oMutation', name = 'Mut. Time Swap' ]{
	dads{
		286
	}
}
node [ id = 296, death = false, type = serv, ref = 'oMutation', name = 'Mut. Lot Remove' ]{
	dads{
		286
	}
}
node [ id = 297, death = false, type = serv, ref = 'oMutation', name = 'Mut. Lot Add' ]{
	dads{
		286
	}
}
node [ id = 298, death = false, type = serv, ref = 'oMutation', name = 'Mut. Time Transfer' ]{
	dads{
		286
	}
}
node [ id = 299, death = false, type = serv, ref = 'oMutation', name = 'Mut. Days change' ]{
	dads{
		286
	}
}
node [ id = 300, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Color Change' ]{
	dads{
		286
	}
}
node [ id = 301, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Lot Swap' ]{
	dads{
		286
	}
}
node [ id = 302, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Time Swap' ]{
	dads{
		286
	}
}
node [ id = 303, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Lot Remove' ]{
	dads{
		286
	}
}
node [ id = 304, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Lot Add' ]{
	dads{
		286
	}
}
node [ id = 305, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Time Transfer' ]{
	dads{
		286
	}
}
node [ id = 306, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Days change' ]{
	dads{
		286
	}
}
node [ id = 307, death = false, type = factory, ref = 'Approach', name = 'Model' ]{
	services{
		308,309
	}
}
node [ id = 308, death = false, type = serv, ref = 'aGCILTModel', name = 'CplexInt' ]{
	dads{
		307
	}
	needs{
		[1|Problem]{64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91}
		[1|BestSol]{92}
	}
}
node [ id = 309, death = false, type = serv, ref = 'aGCILTModel', name = 'CplexInt' ]{
	dads{
		307
	}
	needs{
		[1|Problem]{64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91}
		[1|BestSol]{92}
	}
}
node [ id = 310, death = false, type = factory, ref = 'Approach', name = 'GCILT Operators' ]{
	services{
		311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330
	}
}
node [ id = 311, death = false, type = serv, ref = 'oInitialization', name = 'Initializer' ]{
	dads{
		310
	}
}
node [ id = 312, death = false, type = serv, ref = 'oCrossover', name = 'Cr. Macro OX' ]{
	dads{
		310
	}
}
node [ id = 313, death = false, type = serv, ref = 'oCrossover', name = 'Cr. Macro 1PT' ]{
	dads{
		310
	}
}
node [ id = 314, death = false, type = serv, ref = 'oCrossover', name = 'Cr. Macro 1PY' ]{
	dads{
		310
	}
}
node [ id = 315, death = false, type = serv, ref = 'oCrossover', name = 'Cr. Micro OX' ]{
	dads{
		310
	}
}
node [ id = 316, death = false, type = serv, ref = 'oCrossover', name = 'Cr. Micro 1P' ]{
	dads{
		310
	}
}
node [ id = 317, death = false, type = serv, ref = 'oMutation', name = 'Mut. Color Change' ]{
	dads{
		310
	}
}
node [ id = 318, death = false, type = serv, ref = 'oMutation', name = 'Mut. Lot Swap' ]{
	dads{
		310
	}
}
node [ id = 319, death = false, type = serv, ref = 'oMutation', name = 'Mut. Time Swap' ]{
	dads{
		310
	}
}
node [ id = 320, death = false, type = serv, ref = 'oMutation', name = 'Mut. Lot Remove' ]{
	dads{
		310
	}
}
node [ id = 321, death = false, type = serv, ref = 'oMutation', name = 'Mut. Lot Add' ]{
	dads{
		310
	}
}
node [ id = 322, death = false, type = serv, ref = 'oMutation', name = 'Mut. Time Transfer' ]{
	dads{
		310
	}
}
node [ id = 323, death = false, type = serv, ref = 'oMutation', name = 'Mut. Days change' ]{
	dads{
		310
	}
}
node [ id = 324, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Color Change' ]{
	dads{
		310
	}
}
node [ id = 325, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Lot Swap' ]{
	dads{
		310
	}
}
node [ id = 326, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Time Swap' ]{
	dads{
		310
	}
}
node [ id = 327, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Lot Remove' ]{
	dads{
		310
	}
}
node [ id = 328, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Lot Add' ]{
	dads{
		310
	}
}
node [ id = 329, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Time Transfer' ]{
	dads{
		310
	}
}
node [ id = 330, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Days change' ]{
	dads{
		310
	}
}
node [ id = 331, death = false, type = factory, ref = 'Approach', name = 'Model' ]{
	services{
		332
	}
}
node [ id = 332, death = false, type = serv, ref = 'aGCILTBModel', name = 'Cplex Full' ]{
	dads{
		331
	}
	needs{
		[1|Problem]{64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91}
		[1|BestSol]{92}
	}
	parameters{
		Dbl [name = 'Fitness Time', init = 10.0000, min = 0.00000, max = 120.000, description = 'null']
		Dbl [name = 'Fitness Gap', init = 0.0500000, min = 0.00000, max = 0.100000, description = 'null']
	}
}
node [ id = 333, death = false, type = factory, ref = 'Approach', name = 'GCILTB Operators' ]{
	services{
		334,335,336,337,338,339,340,341,342,343
	}
}
node [ id = 334, death = false, type = serv, ref = 'oInitialization', name = 'Init. Marcio' ]{
	dads{
		333
	}
	parameters{
		Int [name = 'Fitness Free Var,', init = 0, min = 0, max = 100, description = 'null']
	}
}
node [ id = 335, death = false, type = serv, ref = 'oCrossover', name = 'Cr. OX' ]{
	dads{
		333
	}
}
node [ id = 336, death = false, type = serv, ref = 'oCrossover', name = 'Cr. Macro 1PT' ]{
	dads{
		333
	}
}
node [ id = 337, death = false, type = serv, ref = 'oCrossover', name = 'Cr. Macro 1PY' ]{
	dads{
		333
	}
}
node [ id = 338, death = false, type = serv, ref = 'oMutation', name = 'Mut. Swap Status' ]{
	dads{
		333
	}
}
node [ id = 339, death = false, type = serv, ref = 'oMutation', name = 'Mut. Swap T' ]{
	dads{
		333
	}
}
node [ id = 340, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Swap Value' ]{
	dads{
		333
	}
}
node [ id = 341, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Swap Status' ]{
	dads{
		333
	}
}
node [ id = 342, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Swap T' ]{
	dads{
		333
	}
}
node [ id = 343, death = false, type = serv, ref = 'oLocalMove', name = 'LM. Swap Y' ]{
	dads{
		333
	}
}
node [ id = 344, death = false, type = factory, ref = 'Approach', name = 'Codif-Real Operators' ]{
	services{
		345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361
	}
}
node [ id = 345, death = false, type = serv, ref = 'oCrossover', name = 'Average' ]{
	dads{
		344
	}
}
node [ id = 346, death = false, type = serv, ref = 'oCrossover', name = 'Geometric' ]{
	dads{
		344
	}
}
node [ id = 347, death = false, type = serv, ref = 'oCrossover', name = 'One-point' ]{
	dads{
		344
	}
}
node [ id = 348, death = false, type = serv, ref = 'oCrossover', name = 'Two-points' ]{
	dads{
		344
	}
}
node [ id = 349, death = false, type = serv, ref = 'oCrossover', name = 'OX' ]{
	dads{
		344
	}
}
node [ id = 350, death = false, type = serv, ref = 'oCrossover', name = 'OX-Fast' ]{
	dads{
		344
	}
}
node [ id = 351, death = false, type = serv, ref = 'oCrossover', name = 'BLX-a' ]{
	dads{
		344
	}
	parameters{
		Dbl [name = 'BLX-alpha', init = 1.00000, min = 0.00000, max = 2.00000, description = 'null']
	}
}
node [ id = 352, death = false, type = serv, ref = 'oCrossover', name = 'Heuristic' ]{
	dads{
		344
	}
}
node [ id = 353, death = false, type = serv, ref = 'oCrossover', name = 'Linear' ]{
	dads{
		344
	}
}
node [ id = 354, death = false, type = serv, ref = 'oCrossover', name = 'Aritmetic' ]{
	dads{
		344
	}
}
node [ id = 355, death = false, type = serv, ref = 'oMutation', name = 'Replace' ]{
	dads{
		344
	}
}
node [ id = 356, death = false, type = serv, ref = 'oMutation', name = 'Limit' ]{
	dads{
		344
	}
}
node [ id = 357, death = false, type = serv, ref = 'oMutation', name = 'Invert' ]{
	dads{
		344
	}
}
node [ id = 358, death = false, type = serv, ref = 'oLocalMove', name = 'Replace' ]{
	dads{
		344
	}
}
node [ id = 359, death = false, type = serv, ref = 'oLocalMove', name = 'Limit' ]{
	dads{
		344
	}
}
node [ id = 360, death = false, type = serv, ref = 'oLocalMove', name = 'Invert' ]{
	dads{
		344
	}
}
node [ id = 361, death = false, type = serv, ref = 'oInitialization', name = 'Random' ]{
	dads{
		344
	}
}
node [ id = 362, death = false, type = factory, ref = 'Approach', name = 'Solver' ]{
	services{
		363,364
	}
}
node [ id = 363, death = false, type = serv, ref = 'aRASolver', name = 'Greedy' ]{
	dads{
		362
	}
	needs{
		[1|RAInstance]{101}
		[1|aRASequencia]{369,370}
	}
}
node [ id = 364, death = false, type = serv, ref = 'aRASolver', name = 'Model' ]{
	dads{
		362
	}
	needs{
		[1|RAInstance]{101}
		[1|aRASequencia]{369,370}
	}
}
node [ id = 365, death = false, type = factory, ref = 'Approach', name = 'fRATSP' ]{
	services{
		366,367
	}
}
node [ id = 366, death = false, type = serv, ref = 'aRATSP', name = 'RA-TSP-Model' ]{
	dads{
		365
	}
	needs{
		[1|RAInstance]{101}
	}
}
node [ id = 367, death = false, type = serv, ref = 'aRATSP', name = 'RA-TSP-Greedy' ]{
	dads{
		365
	}
	needs{
		[1|RAInstance]{101}
	}
}
node [ id = 368, death = false, type = factory, ref = 'Approach', name = 'Sequencia' ]{
	services{
		369,370
	}
}
node [ id = 369, death = false, type = serv, ref = 'aRASequencia', name = 'Dependente' ]{
	dads{
		368
	}
	needs{
		[1|RAInstance]{101}
	}
}
node [ id = 370, death = false, type = serv, ref = 'aRASequencia', name = 'Independente' ]{
	dads{
		368
	}
	needs{
		[1|RAInstance]{101}
	}
}
node [ id = 371, death = false, type = factory, ref = 'Approach', name = 'PSSLSAN Operators-2' ]{
	services{
		372,373,374,375
	}
}
node [ id = 372, death = false, type = serv, ref = 'oInitialization', name = 'Random' ]{
	dads{
		371
	}
}
node [ id = 373, death = false, type = serv, ref = 'oMutation', name = 'Invert' ]{
	dads{
		371
	}
}
node [ id = 374, death = false, type = serv, ref = 'oLocalMove', name = 'Invert' ]{
	dads{
		371
	}
}
node [ id = 375, death = false, type = serv, ref = 'oCrossover', name = 'OX' ]{
	dads{
		371
	}
}
node [ id = 376, death = false, type = factory, ref = 'Approach', name = 'PSSLSAN Operators-1' ]{
	services{
		377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395
	}
}
node [ id = 377, death = false, type = serv, ref = 'oCrossover', name = '1P' ]{
	dads{
		376
	}
}
node [ id = 378, death = false, type = serv, ref = 'oCrossover', name = '1P-T' ]{
	dads{
		376
	}
}
node [ id = 379, death = false, type = serv, ref = 'oCrossover', name = 'OX' ]{
	dads{
		376
	}
}
node [ id = 380, death = false, type = serv, ref = 'oCrossover', name = 'OX-T' ]{
	dads{
		376
	}
}
node [ id = 381, death = false, type = serv, ref = 'oMutation', name = 'Insert' ]{
	dads{
		376
	}
}
node [ id = 382, death = false, type = serv, ref = 'oMutation', name = 'Swap' ]{
	dads{
		376
	}
}
node [ id = 383, death = false, type = serv, ref = 'oMutation', name = 'Remove' ]{
	dads{
		376
	}
}
node [ id = 384, death = false, type = serv, ref = 'oMutation', name = 'Change' ]{
	dads{
		376
	}
}
node [ id = 385, death = false, type = serv, ref = 'oMutation', name = 'Move' ]{
	dads{
		376
	}
}
node [ id = 386, death = false, type = serv, ref = 'oMutation', name = 'Shuffle' ]{
	dads{
		376
	}
}
node [ id = 387, death = false, type = serv, ref = 'oMutation', name = 'Reinit' ]{
	dads{
		376
	}
}
node [ id = 388, death = false, type = serv, ref = 'oInitialization', name = 'Random' ]{
	dads{
		376
	}
}
node [ id = 389, death = false, type = serv, ref = 'oLocalMove', name = 'Insert' ]{
	dads{
		376
	}
}
node [ id = 390, death = false, type = serv, ref = 'oLocalMove', name = 'Swap' ]{
	dads{
		376
	}
}
node [ id = 391, death = false, type = serv, ref = 'oLocalMove', name = 'Remove' ]{
	dads{
		376
	}
}
node [ id = 392, death = false, type = serv, ref = 'oLocalMove', name = 'Change' ]{
	dads{
		376
	}
}
node [ id = 393, death = false, type = serv, ref = 'oLocalMove', name = 'Move' ]{
	dads{
		376
	}
}
node [ id = 394, death = false, type = serv, ref = 'oLocalMove', name = 'Shuffle' ]{
	dads{
		376
	}
}
node [ id = 395, death = false, type = serv, ref = 'oLocalMove', name = 'Reinit' ]{
	dads{
		376
	}
}
node [ id = 396, death = false, type = factory, ref = 'Approach', name = 'MD Operators' ]{
	services{
		397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415
	}
}
node [ id = 397, death = false, type = serv, ref = 'oInitialization', name = 'Random' ]{
	dads{
		396
	}
}
node [ id = 398, death = false, type = serv, ref = 'oCrossover', name = 'OX' ]{
	dads{
		396
	}
}
node [ id = 399, death = false, type = serv, ref = 'oCrossover', name = 'AVG' ]{
	dads{
		396
	}
}
node [ id = 400, death = false, type = serv, ref = 'oMutation', name = 'Mut(*)' ]{
	dads{
		396
	}
}
node [ id = 401, death = false, type = serv, ref = 'oLocalMove', name = 'Mov(*)' ]{
	dads{
		396
	}
}
node [ id = 402, death = false, type = serv, ref = 'oMutation', name = 'Mut(+)' ]{
	dads{
		396
	}
}
node [ id = 403, death = false, type = serv, ref = 'oLocalMove', name = 'Mov(+)' ]{
	dads{
		396
	}
}
node [ id = 404, death = false, type = serv, ref = 'oMutation', name = 'Mut-Swap' ]{
	dads{
		396
	}
}
node [ id = 405, death = false, type = serv, ref = 'oLocalMove', name = 'Mov-Swap' ]{
	dads{
		396
	}
}
node [ id = 406, death = false, type = serv, ref = 'oMutation', name = 'Mut-Round' ]{
	dads{
		396
	}
}
node [ id = 407, death = false, type = serv, ref = 'oLocalMove', name = 'Mov-Round' ]{
	dads{
		396
	}
}
node [ id = 408, death = false, type = serv, ref = 'oMutation', name = 'Mut-Single' ]{
	dads{
		396
	}
}
node [ id = 409, death = false, type = serv, ref = 'oLocalMove', name = 'Mov-Single' ]{
	dads{
		396
	}
}
node [ id = 410, death = false, type = serv, ref = 'oMutation', name = 'Mut-Geo-Rmd' ]{
	dads{
		396
	}
}
node [ id = 411, death = false, type = serv, ref = 'oLocalMove', name = 'Mov-Geo-Rmd' ]{
	dads{
		396
	}
}
node [ id = 412, death = false, type = serv, ref = 'oMutation', name = 'Mut-Geo-Apro' ]{
	dads{
		396
	}
}
node [ id = 413, death = false, type = serv, ref = 'oLocalMove', name = 'Mov-Geo-Apro' ]{
	dads{
		396
	}
}
node [ id = 414, death = false, type = serv, ref = 'oMutation', name = 'Mut-repair' ]{
	dads{
		396
	}
}
node [ id = 415, death = false, type = serv, ref = 'oLocalMove', name = 'Mov-repair' ]{
	dads{
		396
	}
}
node [ id = 416, death = false, type = factory, ref = 'Approach', name = 'MD-Heuristic' ]{
	services{
		417
	}
}
node [ id = 417, death = false, type = serv, ref = 'aMDHeuristic', name = 'Model' ]{
	dads{
		416
	}
	needs{
		[1|MDInstance]{106,107}
	}
}
node [ id = 418, death = false, type = factory, ref = 'Approach', name = 'MD-Cpx Operators' ]{
	services{
		419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437
	}
}
node [ id = 419, death = false, type = serv, ref = 'oInitialization', name = 'Random' ]{
	dads{
		418
	}
}
node [ id = 420, death = false, type = serv, ref = 'oCrossover', name = 'OX' ]{
	dads{
		418
	}
}
node [ id = 421, death = false, type = serv, ref = 'oCrossover', name = 'AVG' ]{
	dads{
		418
	}
}
node [ id = 422, death = false, type = serv, ref = 'oMutation', name = 'Mut(*)' ]{
	dads{
		418
	}
}
node [ id = 423, death = false, type = serv, ref = 'oLocalMove', name = 'Mov(*)' ]{
	dads{
		418
	}
}
node [ id = 424, death = false, type = serv, ref = 'oMutation', name = 'Mut(+)' ]{
	dads{
		418
	}
}
node [ id = 425, death = false, type = serv, ref = 'oLocalMove', name = 'Mov(+)' ]{
	dads{
		418
	}
}
node [ id = 426, death = false, type = serv, ref = 'oMutation', name = 'Mut-Swap' ]{
	dads{
		418
	}
}
node [ id = 427, death = false, type = serv, ref = 'oLocalMove', name = 'Mov-Swap' ]{
	dads{
		418
	}
}
node [ id = 428, death = false, type = serv, ref = 'oMutation', name = 'Mut-Round' ]{
	dads{
		418
	}
}
node [ id = 429, death = false, type = serv, ref = 'oLocalMove', name = 'Mov-Round' ]{
	dads{
		418
	}
}
node [ id = 430, death = false, type = serv, ref = 'oMutation', name = 'Mut-Single' ]{
	dads{
		418
	}
}
node [ id = 431, death = false, type = serv, ref = 'oLocalMove', name = 'Mov-Single' ]{
	dads{
		418
	}
}
node [ id = 432, death = false, type = serv, ref = 'oMutation', name = 'Mut-Geo-Rmd' ]{
	dads{
		418
	}
}
node [ id = 433, death = false, type = serv, ref = 'oLocalMove', name = 'Mov-Geo-Rmd' ]{
	dads{
		418
	}
}
node [ id = 434, death = false, type = serv, ref = 'oMutation', name = 'Mut-Geo-Apro' ]{
	dads{
		418
	}
}
node [ id = 435, death = false, type = serv, ref = 'oLocalMove', name = 'Mov-Geo-Apro' ]{
	dads{
		418
	}
}
node [ id = 436, death = false, type = serv, ref = 'oMutation', name = 'Mut-repair' ]{
	dads{
		418
	}
}
node [ id = 437, death = false, type = serv, ref = 'oLocalMove', name = 'Mov-repair' ]{
	dads{
		418
	}
}
node [ id = 438, death = false, type = factory, ref = 'Approach', name = 'MLCLSP Operators' ]{
	services{
		439,440,441,442,443
	}
}
node [ id = 439, death = false, type = serv, ref = 'oHcGA', name = 'update' ]{
	dads{
		438
	}
	parameters{
		Dbl [name = 'initial probability', init = 0.900000, min = 0.00000, max = 1.00000, description = 'null']
	}
}
node [ id = 440, death = false, type = serv, ref = 'oFixAndOpt', name = 'Fix & Opt' ]{
	dads{
		438
	}
}
node [ id = 441, death = false, type = serv, ref = 'oInitialization', name = 'Yjt=1 | Pr' ]{
	dads{
		438
	}
	parameters{
		Dbl [name = 'Pr(Yjt=1)', init = 0.900000, min = 0.00000, max = 1.00000, description = 'null']
	}
}
node [ id = 442, death = false, type = serv, ref = 'oLocalMove', name = 'Invert Rand' ]{
	dads{
		438
	}
}
node [ id = 443, death = false, type = serv, ref = 'oLocalMove', name = 'Invert Next' ]{
	dads{
		438
	}
}
node [ id = 444, death = false, type = factory, ref = 'Approach', name = 'TSP Operators' ]{
	services{
		445,446,447,448
	}
}
node [ id = 445, death = false, type = serv, ref = 'oInitialization', name = 'Random Edges' ]{
	dads{
		444
	}
}
node [ id = 446, death = false, type = serv, ref = 'oMutation', name = 'Mut-TwoEdges' ]{
	dads{
		444
	}
}
node [ id = 447, death = false, type = serv, ref = 'oCrossover', name = 'SelectEdges' ]{
	dads{
		444
	}
}
node [ id = 448, death = false, type = serv, ref = 'oInitialization', name = 'Greedy Edges' ]{
	dads{
		444
	}
}
node [ id = 449, death = false, type = factory, ref = 'Approach', name = 'Vehicle' ]{
	services{
		450,451
	}
}
node [ id = 450, death = false, type = serv, ref = 'oLinearVehicle', name = 'Parts' ]{
	dads{
		449
	}
	factorys{
		[1|null|State Bound]{572}
		[1|null|Control Bound]{578}
		[1|null|Dynamic]{584}
		[1|null|Specific]{603}
	}
}
node [ id = 451, death = false, type = serv, ref = 'oLinearVehicle', name = 'FullPV' ]{
	dads{
		449
	}
}
node [ id = 452, death = false, type = factory, ref = 'Approach', name = 'fBlackmoreUncertainty' ]{
	services{
		453,454,455,456,457,458
	}
}
node [ id = 453, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'Linear State Unc.' ]{
	dads{
		452
	}
	parameters{
		Dbl [name = 'std-position', init = 0.0500000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'std-velocity', init = 0.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'inc-factor', init = 1.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 454, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'Rover State Unc.' ]{
	dads{
		452
	}
	needs{
		[1|oLinearDynamic]{585,586,587,588,589,590,591,592,593}
	}
	parameters{
		Dbl [name = 'sigma-0', init = 0.100000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'sigma-x', init = 0.500000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'sigma-y', init = 0.300000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'angle', init = 45.0000, min = 0.00000, max = 360.000, description = 'null']
	}
}
node [ id = 455, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'Linear State Unc. File' ]{
	dads{
		452
	}
	parameters{
		FileRgx[name = 'Uncertainty', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 456, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'Linear State Unc. File Closed Loop' ]{
	dads{
		452
	}
	parameters{
		FileRgx[name = 'Uncertainty', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 457, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'State Perfect Unc.' ]{
	dads{
		452
	}
	needs{
		[1|oLinearDynamic]{585,586,587,588,589,590,591,592,593}
	}
	parameters{
		Dbl [name = 'std-position', init = 0.100000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'std-velocity', init = 0.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 458, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'State Open Unc.' ]{
	dads{
		452
	}
	needs{
		[1|oLinearDynamic]{585,586,587,588,589,590,591,592,593}
	}
	parameters{
		Dbl [name = 'std-position', init = 0.0500000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'std-velocity', init = 0.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'inc-factor', init = 1.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 459, death = false, type = factory, ref = 'Approach', name = 'Instance Reader' ]{
	services{
		460,461,462,463,464,465,466,467
	}
}
node [ id = 460, death = false, type = serv, ref = 'Instance', name = 'Instance 2D' ]{
	dads{
		459
	}
	parameters{
		FileRgx[name = 'Configuration for Instance 2D', description = 'null', regex = '(.*\.sgl)', constrants = null]
		FileRgx[name = 'Map for Instance 2D', description = 'null', regex = '(.*\.sgl)', constrants = null]
	}
}
node [ id = 461, death = false, type = serv, ref = 'Instance', name = 'Instance 3Dhalf-hard' ]{
	dads{
		459
	}
	parameters{
		FileRgx[name = 'Configuration for Instance 3Dhalf-hard', description = 'null', regex = '(.*\.sgl)', constrants = null]
		FileRgx[name = 'Map for Instance 3Dhalf-hard', description = 'null', regex = '(.*\.sgl)', constrants = null]
	}
}
node [ id = 462, death = false, type = serv, ref = 'Instance', name = 'Instance 3Dhalf-rmd' ]{
	dads{
		459
	}
	parameters{
		FileRgx[name = 'Configuration for Instance 3Dhalf-rmd', description = 'null', regex = '(.*\.sgl)', constrants = null]
		FileRgx[name = 'Map for Instance 3Dhalf-rmd', description = 'null', regex = '(.*\.sgl)', constrants = null]
	}
}
node [ id = 463, death = false, type = serv, ref = 'BlackmoreInstance', name = 'Instance 2D Rover' ]{
	dads{
		459
	}
	parameters{
		FileRgx[name = 'Configuration for Rover 2D', description = 'null', regex = '(.*\.txt)', constrants = null]
		FileRgx[name = 'Map for Rover 2D', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 464, death = false, type = serv, ref = 'Instance', name = 'Instance 2Dhalf' ]{
	dads{
		459
	}
	parameters{
		FileRgx[name = 'Configuration for Instance 2Dhalf', description = 'null', regex = '(.*\.sgl)', constrants = null]
		FileRgx[name = 'Map for Instance 2Dhalf', description = 'null', regex = '(.*\.sgl)', constrants = null]
	}
}
node [ id = 465, death = false, type = serv, ref = 'BlackmoreInstance', name = 'Instance 2D Emterprise' ]{
	dads{
		459
	}
	parameters{
		FileRgx[name = 'Configuration for Blackmore 2D Ono', description = 'null', regex = '(.*\.txt)', constrants = null]
		FileRgx[name = 'Map for Blackmore 2D Ono', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 466, death = false, type = serv, ref = 'BlackmoreInstance', name = 'Instance 3D Earth' ]{
	dads{
		459
	}
	parameters{
		FileRgx[name = 'Map for Instance 3D Earth', description = 'null', regex = '(.*\.sgl)', constrants = null]
	}
}
node [ id = 467, death = false, type = serv, ref = 'Instance', name = 'Instance RealTests' ]{
	dads{
		459
	}
	parameters{
		FileRgx[name = 'Configuration for Instance RealTests', description = 'null', regex = '(.*\.sgl)', constrants = null]
		FileRgx[name = 'Map for Instance RealTests', description = 'null', regex = '(.*\.sgl)', constrants = null]
	}
}
node [ id = 468, death = false, type = factory, ref = 'Approach', name = 'Objective' ]{
	services{
		469,470,471,472
	}
}
node [ id = 469, death = false, type = serv, ref = 'oLinearObjective', name = '|u|*dt' ]{
	dads{
		468
	}
	needs{
		[1|pLinearWaypoints]{594,595,596,597,598,599,600,601,602}
	}
}
node [ id = 470, death = false, type = serv, ref = 'oLinearObjective', name = '||u||*dt' ]{
	dads{
		468
	}
	needs{
		[1|pLinearWaypoints]{594,595,596,597,598,599,600,601,602}
	}
}
node [ id = 471, death = false, type = serv, ref = 'oLinearObjective', name = 'aprox{ u*u }*dt' ]{
	dads{
		468
	}
	needs{
		[1|pLinearWaypoints]{594,595,596,597,598,599,600,601,602}
	}
	parameters{
		Int [name = 'N-aprox', init = 32, min = 1, max = 128, description = 'null']
	}
}
node [ id = 472, death = false, type = serv, ref = 'oLinearObjective', name = 'cplex{ u*u }*dt' ]{
	dads{
		468
	}
	needs{
		[1|pLinearWaypoints]{594,595,596,597,598,599,600,601,602}
	}
}
node [ id = 473, death = false, type = factory, ref = 'Approach', name = 'Blackmore Avoidance' ]{
	services{
		474,475,476,477,478,479,480,481,482,483
	}
}
node [ id = 474, death = false, type = serv, ref = 'ModelAbstract', name = 'Sum{Z} ge 1' ]{
	dads{
		473
	}
}
node [ id = 475, death = false, type = serv, ref = 'ModelAbstract', name = 'Sum{Z} eq 1' ]{
	dads{
		473
	}
}
node [ id = 476, death = false, type = serv, ref = 'BlackmoreGe', name = 'alpha ge |Zi| + |Zl| - 1' ]{
	dads{
		473
	}
}
node [ id = 477, death = false, type = serv, ref = 'BlackmoreGe', name = '1 ge |Zi| + |Zl|' ]{
	dads{
		473
	}
}
node [ id = 478, death = false, type = serv, ref = 'ModelAbstract', name = 'sum{ Z(t) and Z(t-1) } ge 1' ]{
	dads{
		473
	}
}
node [ id = 479, death = false, type = serv, ref = 'ModelAbstract', name = 'sum{ Z(t) and Z(t-1) } = 1' ]{
	dads{
		473
	}
}
node [ id = 480, death = false, type = serv, ref = 'BlackmoreGe', name = 'Cheng Ge' ]{
	dads{
		473
	}
}
node [ id = 481, death = false, type = serv, ref = 'BlackmoreEq', name = 'Cheng Eq' ]{
	dads{
		473
	}
}
node [ id = 482, death = false, type = serv, ref = 'BlackmoreGe', name = 'Conservative Ge' ]{
	dads{
		473
	}
}
node [ id = 483, death = false, type = serv, ref = 'BlackmoreEq', name = 'Conservative Eq' ]{
	dads{
		473
	}
}
node [ id = 484, death = false, type = factory, ref = 'Approach', name = 'BlackmoreOperatorProblem' ]{
	services{
		485,486,487,488
	}
}
node [ id = 485, death = false, type = serv, ref = 'oInitialization', name = 'Random Tour' ]{
	dads{
		484
	}
}
node [ id = 486, death = false, type = serv, ref = 'oMutation', name = 'Mut-Exchange' ]{
	dads{
		484
	}
}
node [ id = 487, death = false, type = serv, ref = 'oCrossover', name = 'Uniform' ]{
	dads{
		484
	}
}
node [ id = 488, death = false, type = serv, ref = 'oLocalMove', name = 'Mov-Exchange' ]{
	dads{
		484
	}
}
node [ id = 489, death = false, type = factory, ref = 'Approach', name = 'Codif-Comb Operators' ]{
	services{
		490,491
	}
}
node [ id = 490, death = false, type = serv, ref = 'oInitialization', name = 'Random' ]{
	dads{
		489
	}
}
node [ id = 491, death = false, type = serv, ref = 'oCombAddConstraints', name = 'TrapLocal' ]{
	dads{
		489
	}
}
node [ id = 492, death = false, type = factory, ref = 'Approach', name = 'TSP Operators' ]{
	services{
		493,494,495,496
	}
}
node [ id = 493, death = false, type = serv, ref = 'oInitialization', name = 'Random Init' ]{
	dads{
		492
	}
}
node [ id = 494, death = false, type = serv, ref = 'oMutation', name = 'Mut-Change' ]{
	dads{
		492
	}
}
node [ id = 495, death = false, type = serv, ref = 'oCrossover', name = 'Uniform' ]{
	dads{
		492
	}
}
node [ id = 496, death = false, type = serv, ref = 'oLocalMove', name = 'Mov-Change' ]{
	dads{
		492
	}
}
node [ id = 497, death = false, type = factory, ref = 'Approach', name = 'RNA Operators' ]{
	services{
		498,499,500,501,502,503
	}
}
node [ id = 498, death = false, type = serv, ref = 'oInitialization', name = 'Random' ]{
	dads{
		497
	}
}
node [ id = 499, death = false, type = serv, ref = 'oCrossover', name = 'RNACrossover' ]{
	dads{
		497
	}
}
node [ id = 500, death = false, type = serv, ref = 'oMutation', name = 'Neuron replace' ]{
	dads{
		497
	}
}
node [ id = 501, death = false, type = serv, ref = 'oMutation', name = 'Neuron change enable' ]{
	dads{
		497
	}
}
node [ id = 502, death = false, type = serv, ref = 'oMutation', name = 'Neuron weigth enable' ]{
	dads{
		497
	}
}
node [ id = 503, death = false, type = serv, ref = 'oMutation', name = 'Change cicles' ]{
	dads{
		497
	}
}
node [ id = 504, death = false, type = factory, ref = 'Approach', name = 'fState' ]{
	services{
		505,506,507,508,509,510,511
	}
}
node [ id = 505, death = false, type = serv, ref = 'oState', name = 'px' ]{
	dads{
		504
	}
}
node [ id = 506, death = false, type = serv, ref = 'oState', name = 'py' ]{
	dads{
		504
	}
}
node [ id = 507, death = false, type = serv, ref = 'oState', name = 'pz' ]{
	dads{
		504
	}
}
node [ id = 508, death = false, type = serv, ref = 'oState', name = 'vy' ]{
	dads{
		504
	}
}
node [ id = 509, death = false, type = serv, ref = 'oState', name = 'vy' ]{
	dads{
		504
	}
}
node [ id = 510, death = false, type = serv, ref = 'oState', name = 'vz' ]{
	dads{
		504
	}
}
node [ id = 511, death = false, type = serv, ref = 'Operator', name = 'fuel' ]{
	dads{
		504
	}
}
node [ id = 512, death = false, type = factory, ref = 'Approach', name = 'fControl' ]{
	services{
		513,514,515,516
	}
}
node [ id = 513, death = false, type = serv, ref = 'Operator', name = 'ax' ]{
	dads{
		512
	}
}
node [ id = 514, death = false, type = serv, ref = 'Operator', name = 'ay' ]{
	dads{
		512
	}
}
node [ id = 515, death = false, type = serv, ref = 'Operator', name = 'az' ]{
	dads{
		512
	}
}
node [ id = 516, death = false, type = serv, ref = 'Operator', name = 'rf' ]{
	dads{
		512
	}
}
node [ id = 517, death = false, type = factory, ref = 'Approach', name = 'fLiteral' ]{
	services{
		518,519
	}
}
node [ id = 518, death = false, type = serv, ref = 'Operator', name = 'water' ]{
	dads{
		517
	}
}
node [ id = 519, death = false, type = serv, ref = 'Operator', name = 'fire' ]{
	dads{
		517
	}
}
node [ id = 520, death = false, type = factory, ref = 'Approach', name = 'Structure' ]{
	services{
		521,522,523,524,525,526
	}
}
node [ id = 521, death = false, type = serv, ref = 'Structure', name = 'Randon' ]{
	dads{
		520
	}
}
node [ id = 522, death = false, type = serv, ref = 'Structure', name = 'Tournament' ]{
	dads{
		520
	}
	parameters{
		Int [name = 'Tournament', init = 2, min = 2, max = 100, description = 'null']
	}
}
node [ id = 523, death = false, type = serv, ref = 'Roulette', name = 'Roulette-Linear' ]{
	dads{
		520
	}
	parameters{
		Dbl [name = 'Max', init = 2.00000, min = 1.00000, max = 1000.00, description = 'null']
	}
}
node [ id = 524, death = false, type = serv, ref = 'Roulette', name = 'Roulette-Exp' ]{
	dads{
		520
	}
	parameters{
		Dbl [name = 'Max', init = 2.00000, min = 1.00000, max = 1000.00, description = 'null']
	}
}
node [ id = 525, death = false, type = serv, ref = 'Structure', name = 'Tree' ]{
	dads{
		520
	}
	parameters{
		Int [name = 'Ramification', init = 2, min = 2, max = 100, description = 'null']
	}
}
node [ id = 526, death = false, type = serv, ref = 'Structure', name = 'Grid' ]{
	dads{
		520
	}
	parameters{
		Int [name = 'Dimensions', init = 2, min = 1, max = 100, description = 'null']
	}
}
node [ id = 527, death = false, type = factory, ref = 'Approach', name = 'Tabu' ]{
	services{
		528,529
	}
}
node [ id = 528, death = false, type = serv, ref = 'TabuList', name = 'Fix' ]{
	dads{
		527
	}
	needs{
		[1|LocalMove]{46}
	}
	parameters{
		Int [name = 'Tabu max', init = 1, min = 0, max = 100, description = 'size of tabuList']
	}
}
node [ id = 529, death = false, type = serv, ref = 'TabuList', name = 'Randon' ]{
	dads{
		527
	}
	needs{
		[1|LocalMove]{46}
	}
	parameters{
		Int [name = 'Change Iter.', init = 1, min = 0, max = 100, description = 'size of tabuList']
	}
}
node [ id = 530, death = false, type = factory, ref = 'Approach', name = 'ExactTSP Operators' ]{
	services{
		531,532
	}
}
node [ id = 531, death = false, type = serv, ref = 'oExpand', name = 'Expand' ]{
	dads{
		530
	}
}
node [ id = 532, death = false, type = serv, ref = 'oLowerBound', name = 'LB-01' ]{
	dads{
		530
	}
}
node [ id = 533, death = false, type = factory, ref = 'Approach', name = 'Blackmore Operators' ]{
	services{
		534,535,536,537,538,539,540,541
	}
}
node [ id = 534, death = false, type = serv, ref = 'Full', name = 'RAA' ]{
	dads{
		533
	}
	factorys{
		[1|null|Blackmore Avoidance]{473}
		[1|null|Blackmore Cuts]{605}
	}
}
node [ id = 535, death = false, type = serv, ref = 'Full', name = 'FRR' ]{
	dads{
		533
	}
	factorys{
		[1|null|Blackmore Avoidance]{473}
		[1|null|Blackmore Cuts]{605}
	}
}
node [ id = 536, death = false, type = serv, ref = 'Full', name = 'FRT' ]{
	dads{
		533
	}
	factorys{
		[1|null|Blackmore Avoidance]{473}
		[1|null|Blackmore Cuts]{605}
	}
}
node [ id = 537, death = false, type = serv, ref = 'oCSA', name = 'CSA' ]{
	dads{
		533
	}
	factorys{
		[1|null|Blackmore Avoidance]{473}
		[1|null|Blackmore Cuts]{605}
	}
}
node [ id = 538, death = false, type = serv, ref = 'CSA', name = 'CSA1' ]{
	dads{
		533
	}
	factorys{
		[1|null|Blackmore Avoidance]{473}
		[1|null|Blackmore Cuts]{605}
	}
}
node [ id = 539, death = false, type = serv, ref = 'CSA', name = 'CSA2' ]{
	dads{
		533
	}
	factorys{
		[1|null|Blackmore Avoidance]{473}
		[1|null|Blackmore Cuts]{605}
	}
}
node [ id = 540, death = false, type = serv, ref = 'CSA2', name = 'CSA3' ]{
	dads{
		533
	}
	factorys{
		[1|null|Blackmore Avoidance]{473}
		[1|null|Blackmore Cuts]{605}
	}
}
node [ id = 541, death = false, type = serv, ref = 'RebuildFull', name = 'RE-RAA' ]{
	dads{
		533
	}
	factorys{
		[1|null|Blackmore Avoidance]{473}
		[1|null|Blackmore Cuts]{605}
	}
}
node [ id = 542, death = false, type = factory, ref = 'Approach', name = 'fBlackmoreUncertainty' ]{
	services{
		543,544,545,546,547,548
	}
}
node [ id = 543, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'Linear State Unc.' ]{
	dads{
		542
	}
	parameters{
		Dbl [name = 'std-position', init = 0.0500000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'std-velocity', init = 0.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'inc-factor', init = 1.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 544, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'Rover State Unc.' ]{
	dads{
		542
	}
	needs{
		[1|oLinearDynamic]{585,586,587,588,589,590,591,592,593}
	}
	parameters{
		Dbl [name = 'sigma-0', init = 0.100000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'sigma-x', init = 0.500000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'sigma-y', init = 0.300000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'angle', init = 45.0000, min = 0.00000, max = 360.000, description = 'null']
	}
}
node [ id = 545, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'Linear State Unc. File' ]{
	dads{
		542
	}
	parameters{
		FileRgx[name = 'Uncertainty', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 546, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'Linear State Unc. File Closed Loop' ]{
	dads{
		542
	}
	parameters{
		FileRgx[name = 'Uncertainty', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 547, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'State Perfect Unc.' ]{
	dads{
		542
	}
	needs{
		[1|oLinearDynamic]{585,586,587,588,589,590,591,592,593}
	}
	parameters{
		Dbl [name = 'std-position', init = 0.100000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'std-velocity', init = 0.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 548, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'State Open Unc.' ]{
	dads{
		542
	}
	needs{
		[1|oLinearDynamic]{585,586,587,588,589,590,591,592,593}
	}
	parameters{
		Dbl [name = 'std-position', init = 0.0500000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'std-velocity', init = 0.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'inc-factor', init = 1.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 549, death = false, type = factory, ref = 'Approach', name = 'fBlackmoreUncertainty' ]{
	services{
		550,551,552,553,554,555
	}
}
node [ id = 550, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'Linear State Unc.' ]{
	dads{
		549
	}
	parameters{
		Dbl [name = 'std-position', init = 0.0500000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'std-velocity', init = 0.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'inc-factor', init = 1.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 551, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'Rover State Unc.' ]{
	dads{
		549
	}
	needs{
		[1|oLinearDynamic]{585,586,587,588,589,590,591,592,593}
	}
	parameters{
		Dbl [name = 'sigma-0', init = 0.100000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'sigma-x', init = 0.500000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'sigma-y', init = 0.300000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'angle', init = 45.0000, min = 0.00000, max = 360.000, description = 'null']
	}
}
node [ id = 552, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'Linear State Unc. File' ]{
	dads{
		549
	}
	parameters{
		FileRgx[name = 'Uncertainty', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 553, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'Linear State Unc. File Closed Loop' ]{
	dads{
		549
	}
	parameters{
		FileRgx[name = 'Uncertainty', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 554, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'State Perfect Unc.' ]{
	dads{
		549
	}
	needs{
		[1|oLinearDynamic]{585,586,587,588,589,590,591,592,593}
	}
	parameters{
		Dbl [name = 'std-position', init = 0.100000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'std-velocity', init = 0.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 555, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'State Open Unc.' ]{
	dads{
		549
	}
	needs{
		[1|oLinearDynamic]{585,586,587,588,589,590,591,592,593}
	}
	parameters{
		Dbl [name = 'std-position', init = 0.0500000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'std-velocity', init = 0.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'inc-factor', init = 1.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 556, death = false, type = factory, ref = 'Approach', name = 'Ono Operators' ]{
	services{
		557,558,559
	}
}
node [ id = 557, death = false, type = serv, ref = 'Full', name = 'RAA' ]{
	dads{
		556
	}
	factorys{
		[1|null|Ono Avoidance]{609}
	}
}
node [ id = 558, death = false, type = serv, ref = 'Full', name = 'FRR' ]{
	dads{
		556
	}
	factorys{
		[1|null|Ono Avoidance]{609}
	}
}
node [ id = 559, death = false, type = serv, ref = 'Full', name = 'FRT' ]{
	dads{
		556
	}
	factorys{
		[1|null|Ono Avoidance]{609}
	}
}
node [ id = 560, death = false, type = factory, ref = 'Approach', name = 'fOnoUncertainty' ]{
	services{
		561,562
	}
}
node [ id = 561, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'Linear State Unc.' ]{
	dads{
		560
	}
	parameters{
		Dbl [name = 'std-position', init = 0.0500000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'std-velocity', init = 0.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'inc-factor', init = 1.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 562, death = false, type = serv, ref = 'pLinearStateUncertainty', name = 'State Perfect Unc.' ]{
	dads{
		560
	}
	needs{
		[1|oLinearDynamic]{585,586,587,588,589,590,591,592,593}
	}
	parameters{
		Dbl [name = 'std-position', init = 0.100000, min = 0.00000, max = 1.00000e+06, description = 'null']
		Dbl [name = 'std-velocity', init = 0.00000, min = 0.00000, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 563, death = false, type = factory, ref = 'Approach', name = 'Instance Reader' ]{
	services{
		564,565
	}
}
node [ id = 564, death = false, type = serv, ref = 'OnoInstance', name = 'Instance 2D' ]{
	dads{
		563
	}
	needs{
		[1|oLinearDynamic]{585,586,587,588,589,590,591,592,593}
	}
	parameters{
		FileRgx[name = 'CCQSP 2D', description = 'null', regex = '(.*\.sgl)', constrants = null]
	}
}
node [ id = 565, death = false, type = serv, ref = 'OnoInstance', name = 'Mission Map 2D' ]{
	dads{
		563
	}
	needs{
		[1|oLinearDynamic]{585,586,587,588,589,590,591,592,593}
		[1|pLinearWaypoints]{594,595,596,597,598,599,600,601,602}
	}
	parameters{
		FileRgx[name = 'CCQSP 2D map', description = 'null', regex = '(.*\.map)', constrants = null]
		FileRgx[name = 'CCQSP 2D mission', description = 'null', regex = '(.*\.mission)', constrants = null]
	}
}
node [ id = 566, death = false, type = factory, ref = 'Approach', name = 'Objective' ]{
	services{
		567,568,569,570,571
	}
}
node [ id = 567, death = false, type = serv, ref = 'oLinearObjective', name = '|u|*dt' ]{
	dads{
		566
	}
	needs{
		[1|pLinearWaypoints]{594,595,596,597,598,599,600,601,602}
	}
}
node [ id = 568, death = false, type = serv, ref = 'oLinearObjective', name = '||u||*dt' ]{
	dads{
		566
	}
	needs{
		[1|pLinearWaypoints]{594,595,596,597,598,599,600,601,602}
	}
}
node [ id = 569, death = false, type = serv, ref = 'oLinearObjective', name = 'aprox{ u*u }*dt' ]{
	dads{
		566
	}
	needs{
		[1|pLinearWaypoints]{594,595,596,597,598,599,600,601,602}
	}
	parameters{
		Int [name = 'N-aprox', init = 32, min = 1, max = 128, description = 'null']
	}
}
node [ id = 570, death = false, type = serv, ref = 'oLinearObjective', name = 'cplex{ u*u }*dt' ]{
	dads{
		566
	}
	needs{
		[1|pLinearWaypoints]{594,595,596,597,598,599,600,601,602}
	}
}
node [ id = 571, death = false, type = serv, ref = 'oLinearObjective', name = 'Te' ]{
	dads{
		566
	}
}
node [ id = 572, death = false, type = factory, ref = 'Approach', name = 'State Bound' ]{
	services{
		573,574,575,576,577
	}
}
node [ id = 573, death = false, type = serv, ref = 'oLinearStateBound', name = 'DetNorm1(Vt)' ]{
	dads{
		572
	}
}
node [ id = 574, death = false, type = serv, ref = 'oLinearStateBound', name = 'UncNorm1(Vt)' ]{
	dads{
		572
	}
	needs{
		[1|pLinearStateUncertainty]{453,454,455,456,457,458,543,544,545,546,547,548,550,551,552,553,554,555,561,562}
		[1|Delta]{110}
	}
	parameters{
		Int [name = 'Velocity-N-risk', init = 12, min = 1, max = 64, description = 'Number of picewise restriction to aproximate the inverse of erf(x) to calculate the risk in Norm1 velocity upper bound']
	}
}
node [ id = 575, death = false, type = serv, ref = 'oLinearStateBound', name = 'DetNorm2(Vt)' ]{
	dads{
		572
	}
}
node [ id = 576, death = false, type = serv, ref = 'oLinearStateBound', name = 'UncNorm2(Vt)' ]{
	dads{
		572
	}
	needs{
		[1|pLinearStateUncertainty]{453,454,455,456,457,458,543,544,545,546,547,548,550,551,552,553,554,555,561,562}
		[1|Delta]{110}
	}
	parameters{
		Int [name = 'Velocity-N-risk', init = 12, min = 1, max = 64, description = 'Number of picewise restriction to aproximate the inverse of erf(x) to calculate the risk in Norm1 velocity upper bound']
	}
}
node [ id = 577, death = false, type = serv, ref = 'oLinearStateBound', name = 'DetXtRn' ]{
	dads{
		572
	}
}
node [ id = 578, death = false, type = factory, ref = 'Approach', name = 'Control Bound' ]{
	services{
		579,580,581,582,583
	}
}
node [ id = 579, death = false, type = serv, ref = 'oLinearControlBound', name = 'DetNorm1(Ut)' ]{
	dads{
		578
	}
}
node [ id = 580, death = false, type = serv, ref = 'oLinearControlBound', name = 'UncNorm1(Ut)' ]{
	dads{
		578
	}
	needs{
		[1|pLinearControlUncertainty]{188}
		[1|Delta]{110}
	}
	parameters{
		Int [name = 'Control-N-risk', init = 12, min = 1, max = 64, description = 'Number of picewise restriction to aproximate the inverse of erf(x) to calculate the risk in Norm1 control upper bound']
	}
}
node [ id = 581, death = false, type = serv, ref = 'oLinearControlBound', name = 'DetNorm2(Ut)' ]{
	dads{
		578
	}
}
node [ id = 582, death = false, type = serv, ref = 'oLinearControlBound', name = 'UncNorm2(Ut)' ]{
	dads{
		578
	}
	needs{
		[1|pLinearControlUncertainty]{188}
		[1|Delta]{110}
	}
	parameters{
		Int [name = 'Control-N-risk', init = 12, min = 1, max = 64, description = 'Number of picewise restriction to aproximate the inverse of erf(x) to calculate the risk in Norm1 control upper bound']
	}
}
node [ id = 583, death = false, type = serv, ref = 'oLinearControlBound', name = 'UncNorm2(Ut)(fortalecimento 6)' ]{
	dads{
		578
	}
	needs{
		[1|pLinearControlUncertainty]{188}
		[1|Delta]{110}
	}
	parameters{
		Int [name = 'Control-N-risk', init = 12, min = 1, max = 64, description = 'Number of picewise restriction to aproximate the inverse of erf(x) to calculate the risk in Norm1 control upper bound']
	}
}
node [ id = 584, death = false, type = factory, ref = 'Approach', name = 'Dynamic' ]{
	services{
		585,586,587,588,589,590,591,592,593
	}
}
node [ id = 585, death = false, type = serv, ref = 'oLinearDynamic', name = 'Air-Free' ]{
	dads{
		584
	}
	services{
		594
	}
}
node [ id = 586, death = false, type = serv, ref = 'oLinearDynamic', name = 'Air-Resistence' ]{
	dads{
		584
	}
	services{
		595
	}
}
node [ id = 587, death = false, type = serv, ref = 'oLinearDynamic', name = 'Blackmore' ]{
	dads{
		584
	}
	services{
		596
	}
}
node [ id = 588, death = false, type = serv, ref = 'oLinearDynamic', name = 'Blackmore-Based' ]{
	dads{
		584
	}
	services{
		597
	}
	parameters{
		Dbl [name = 'pr', init = 0.786900, min = 0.000100000, max = 0.999900, description = 'null']
		Dbl [name = 'vr', init = 0.606500, min = 0.000100000, max = 0.999900, description = 'null']
	}
}
node [ id = 589, death = false, type = serv, ref = 'oLinearDynamic', name = 'Rover' ]{
	dads{
		584
	}
	services{
		598
	}
}
node [ id = 590, death = false, type = serv, ref = 'oLinearDynamic', name = 'File-Matrix' ]{
	dads{
		584
	}
	services{
		599
	}
	parameters{
		FileRgx[name = 'Dynamic', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 591, death = false, type = serv, ref = 'oLinearDynamic', name = 'File-Matrix-ClosedLoop' ]{
	dads{
		584
	}
	services{
		600
	}
	parameters{
		FileRgx[name = 'Dynamic', description = 'null', regex = '(.*\.txt)', constrants = null]
	}
}
node [ id = 592, death = false, type = serv, ref = 'oLinearDynamic', name = 'Air-Free-PV' ]{
	dads{
		584
	}
	services{
		601
	}
}
node [ id = 593, death = false, type = serv, ref = 'oLinearDynamic', name = 'Air-Resistence2' ]{
	dads{
		584
	}
	services{
		602
	}
}
node [ id = 594, death = false, type = serv, ref = 'pLinearWaypoints', name = 'Dynamic dt' ]{
	dads{
		585
	}
	parameters{
		Int [name = 'Waypoints', init = 20, min = 2, max = 1000, description = 'null']
		Dbl [name = 'time horizon', init = 20.0000, min = 0.00100000, max = 100000, description = 'null']
		Dbl [name = 'Max-velocity', init = 3.00000, min = 1.00000e-05, max = 1.00000e+06, description = 'null']
		Dbl [name = 'Max-control', init = 1.00000, min = 1.00000e-05, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 595, death = false, type = serv, ref = 'pLinearWaypoints', name = 'Power dt' ]{
	dads{
		586
	}
	parameters{
		Int [name = 'Waypoints', init = 20, min = 2, max = 1000, description = 'null']
		Dbl [name = 'time horizon', init = 20.0000, min = 0.00100000, max = 100000, description = 'null']
		Dbl [name = 'Max-velocity', init = 3.00000, min = 1.00000e-05, max = 1.00000e+06, description = 'null']
		Dbl [name = 'Power(hp)', init = 0.00402145, min = 1.00000e-05, max = 100000, description = 'null']
		Dbl [name = 'mass', init = 1.00000, min = 0.00100000, max = 100000, description = 'null']
	}
}
node [ id = 596, death = false, type = serv, ref = 'pLinearWaypoints', name = 'Fixed dt' ]{
	dads{
		587
	}
	parameters{
		Int [name = 'Waypoints', init = 20, min = 2, max = 1000, description = 'null']
		Dbl [name = 'Max-velocity', init = 3.00000, min = 1.00000e-05, max = 1.00000e+06, description = 'null']
		Dbl [name = 'Max-control', init = 1.00000, min = 1.00000e-05, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 597, death = false, type = serv, ref = 'pLinearWaypoints', name = 'Fixed dt' ]{
	dads{
		588
	}
	parameters{
		Int [name = 'Waypoints', init = 20, min = 2, max = 1000, description = 'null']
		Dbl [name = 'Max-velocity', init = 3.00000, min = 1.00000e-05, max = 1.00000e+06, description = 'null']
		Dbl [name = 'Max-control', init = 1.00000, min = 1.00000e-05, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 598, death = false, type = serv, ref = 'pLinearWaypoints', name = 'Velocity dt' ]{
	dads{
		589
	}
	parameters{
		Int [name = 'Waypoints', init = 20, min = 2, max = 1000, description = 'null']
		Dbl [name = 'time horizon', init = 20.0000, min = 0.00100000, max = 100000, description = 'null']
		Dbl [name = 'Max-control', init = 1.00000, min = 1.00000e-05, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 599, death = false, type = serv, ref = 'pLinearWaypoints', name = 'Dynamic dt' ]{
	dads{
		590
	}
	parameters{
		Int [name = 'Waypoints', init = 20, min = 2, max = 1000, description = 'null']
		Dbl [name = 'time horizon', init = 20.0000, min = 0.00100000, max = 100000, description = 'null']
		Dbl [name = 'Max-velocity', init = 3.00000, min = 1.00000e-05, max = 1.00000e+06, description = 'null']
		Dbl [name = 'Max-control', init = 1.00000, min = 1.00000e-05, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 600, death = false, type = serv, ref = 'pLinearWaypoints', name = 'Dynamic dt' ]{
	dads{
		591
	}
	parameters{
		Int [name = 'Waypoints', init = 20, min = 2, max = 1000, description = 'null']
		Dbl [name = 'time horizon', init = 20.0000, min = 0.00100000, max = 100000, description = 'null']
		Dbl [name = 'Max-velocity', init = 3.00000, min = 1.00000e-05, max = 1.00000e+06, description = 'null']
		Dbl [name = 'Max-control', init = 1.00000, min = 1.00000e-05, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 601, death = false, type = serv, ref = 'pLinearWaypoints', name = 'Velocity dt' ]{
	dads{
		592
	}
	parameters{
		Int [name = 'Waypoints', init = 20, min = 2, max = 1000, description = 'null']
		Dbl [name = 'time horizon', init = 20.0000, min = 0.00100000, max = 100000, description = 'null']
		Dbl [name = 'Max-control', init = 1.00000, min = 1.00000e-05, max = 1.00000e+06, description = 'null']
	}
}
node [ id = 602, death = false, type = serv, ref = 'pLinearWaypoints', name = 'Power dt' ]{
	dads{
		593
	}
	parameters{
		Int [name = 'Waypoints', init = 20, min = 2, max = 1000, description = 'T > 'time horizon' * U-max / V-term']
		Dbl [name = 'time horizon', init = 20.0000, min = 0.00100000, max = 100000, description = 'null']
		Dbl [name = 'V-term', init = 3.00000, min = 1.00000e-05, max = 1.00000e+06, description = 'null']
		Dbl [name = 'U-max', init = 1.00000, min = 1.00000e-05, max = 100000, description = 'null']
	}
}
node [ id = 603, death = false, type = factory, ref = 'Approach', name = 'Specific' ]{
	services{
		604
	}
}
node [ id = 604, death = false, type = serv, ref = 'oLinearSpecific', name = 'Empty' ]{
	dads{
		603
	}
}
node [ id = 605, death = false, type = factory, ref = 'Approach', name = 'Blackmore Cuts' ]{
	services{
		606,607,608
	}
}
node [ id = 606, death = false, type = serv, ref = 'oCuts', name = 'Empty Cust' ]{
	dads{
		605
	}
}
node [ id = 607, death = false, type = serv, ref = 'oCuts', name = 'Abusive' ]{
	dads{
		605
	}
}
node [ id = 608, death = false, type = serv, ref = 'oCuts', name = 'Conservative' ]{
	dads{
		605
	}
}
node [ id = 609, death = false, type = factory, ref = 'Approach', name = 'Ono Avoidance' ]{
	services{
		610,611,612
	}
}
node [ id = 610, death = false, type = serv, ref = 'oOnoAvoidance', name = 'Sum{Z} gt 1' ]{
	dads{
		609
	}
}
node [ id = 611, death = false, type = serv, ref = 'oOnoAvoidance', name = 'Sum{Z} eq 1 (fortalecimento 5)' ]{
	dads{
		609
	}
}
node [ id = 612, death = false, type = serv, ref = 'Model1', name = 'or{ Z(t) and Z(t-1) } = 1' ]{
	dads{
		609
	}
}
